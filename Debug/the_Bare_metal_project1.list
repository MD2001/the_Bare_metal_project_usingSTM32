
the_Bare_metal_project1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000200  08000130  08000130  00001130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000330  08000338  00001338  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000330  08000330  00001338  2**0
                  CONTENTS
  4 .ARM          00000000  08000330  08000330  00001338  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000330  08000338  00001338  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000330  08000330  00001330  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000334  08000334  00001334  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001338  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000338  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000338  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00001338  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000269  00000000  00000000  00001361  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000012b  00000000  00000000  000015ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000098  00000000  00000000  000016f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000063  00000000  00000000  00001790  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000012c  00000000  00000000  000017f3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000002e7  00000000  00000000  0000191f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003673  00000000  00000000  00001c06  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00005279  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000184  00000000  00000000  000052bc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004a  00000000  00000000  00005440  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	@ (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	@ (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	@ (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	08000318 	.word	0x08000318

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	@ (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	@ (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	@ (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	08000318 	.word	0x08000318

08000170 <MNVIC_voidEnableInterrupt>:
#include "NVIC_config.h"

/***************************** Code Section *********************************/

void MNVIC_voidEnableInterrupt(u8 Copy_u8InterruptId)
{
 8000170:	b480      	push	{r7}
 8000172:	b083      	sub	sp, #12
 8000174:	af00      	add	r7, sp, #0
 8000176:	4603      	mov	r3, r0
 8000178:	71fb      	strb	r3, [r7, #7]
    if(Copy_u8InterruptId < 67)
 800017a:	79fb      	ldrb	r3, [r7, #7]
 800017c:	2b42      	cmp	r3, #66	@ 0x42
 800017e:	d828      	bhi.n	80001d2 <MNVIC_voidEnableInterrupt+0x62>
    {
        if(Copy_u8InterruptId <= 31)
 8000180:	79fb      	ldrb	r3, [r7, #7]
 8000182:	2b1f      	cmp	r3, #31
 8000184:	d80a      	bhi.n	800019c <MNVIC_voidEnableInterrupt+0x2c>
        {
            SET_BIT(ISER0,Copy_u8InterruptId);
 8000186:	4b15      	ldr	r3, [pc, #84]	@ (80001dc <MNVIC_voidEnableInterrupt+0x6c>)
 8000188:	681b      	ldr	r3, [r3, #0]
 800018a:	79fa      	ldrb	r2, [r7, #7]
 800018c:	2101      	movs	r1, #1
 800018e:	fa01 f202 	lsl.w	r2, r1, r2
 8000192:	4611      	mov	r1, r2
 8000194:	4a11      	ldr	r2, [pc, #68]	@ (80001dc <MNVIC_voidEnableInterrupt+0x6c>)
 8000196:	430b      	orrs	r3, r1
 8000198:	6013      	str	r3, [r2, #0]
    }
    else
    {
       /*error*/
    }
}
 800019a:	e01a      	b.n	80001d2 <MNVIC_voidEnableInterrupt+0x62>
        else if (Copy_u8InterruptId<=63)
 800019c:	79fb      	ldrb	r3, [r7, #7]
 800019e:	2b3f      	cmp	r3, #63	@ 0x3f
 80001a0:	d80a      	bhi.n	80001b8 <MNVIC_voidEnableInterrupt+0x48>
            SET_BIT(ISER1,Copy_u8InterruptId);
 80001a2:	4b0f      	ldr	r3, [pc, #60]	@ (80001e0 <MNVIC_voidEnableInterrupt+0x70>)
 80001a4:	681b      	ldr	r3, [r3, #0]
 80001a6:	79fa      	ldrb	r2, [r7, #7]
 80001a8:	2101      	movs	r1, #1
 80001aa:	fa01 f202 	lsl.w	r2, r1, r2
 80001ae:	4611      	mov	r1, r2
 80001b0:	4a0b      	ldr	r2, [pc, #44]	@ (80001e0 <MNVIC_voidEnableInterrupt+0x70>)
 80001b2:	430b      	orrs	r3, r1
 80001b4:	6013      	str	r3, [r2, #0]
}
 80001b6:	e00c      	b.n	80001d2 <MNVIC_voidEnableInterrupt+0x62>
        else if(Copy_u8InterruptId<=67)
 80001b8:	79fb      	ldrb	r3, [r7, #7]
 80001ba:	2b43      	cmp	r3, #67	@ 0x43
 80001bc:	d809      	bhi.n	80001d2 <MNVIC_voidEnableInterrupt+0x62>
            SET_BIT(ISER2,Copy_u8InterruptId);
 80001be:	4b09      	ldr	r3, [pc, #36]	@ (80001e4 <MNVIC_voidEnableInterrupt+0x74>)
 80001c0:	681b      	ldr	r3, [r3, #0]
 80001c2:	79fa      	ldrb	r2, [r7, #7]
 80001c4:	2101      	movs	r1, #1
 80001c6:	fa01 f202 	lsl.w	r2, r1, r2
 80001ca:	4611      	mov	r1, r2
 80001cc:	4a05      	ldr	r2, [pc, #20]	@ (80001e4 <MNVIC_voidEnableInterrupt+0x74>)
 80001ce:	430b      	orrs	r3, r1
 80001d0:	6013      	str	r3, [r2, #0]
}
 80001d2:	bf00      	nop
 80001d4:	370c      	adds	r7, #12
 80001d6:	46bd      	mov	sp, r7
 80001d8:	bc80      	pop	{r7}
 80001da:	4770      	bx	lr
 80001dc:	e000e100 	.word	0xe000e100
 80001e0:	e000e104 	.word	0xe000e104
 80001e4:	e000e108 	.word	0xe000e108

080001e8 <MNVIC_voidDisableInterrupt>:

void MNVIC_voidDisableInterrupt(u8 Copy_u8InterruptId)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	4603      	mov	r3, r0
 80001f0:	71fb      	strb	r3, [r7, #7]
    if(Copy_u8InterruptId < 67)
 80001f2:	79fb      	ldrb	r3, [r7, #7]
 80001f4:	2b42      	cmp	r3, #66	@ 0x42
 80001f6:	d828      	bhi.n	800024a <MNVIC_voidDisableInterrupt+0x62>
    {
        if(Copy_u8InterruptId<=31)
 80001f8:	79fb      	ldrb	r3, [r7, #7]
 80001fa:	2b1f      	cmp	r3, #31
 80001fc:	d80a      	bhi.n	8000214 <MNVIC_voidDisableInterrupt+0x2c>
        {
            SET_BIT(ICER0,Copy_u8InterruptId);
 80001fe:	4b15      	ldr	r3, [pc, #84]	@ (8000254 <MNVIC_voidDisableInterrupt+0x6c>)
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	79fa      	ldrb	r2, [r7, #7]
 8000204:	2101      	movs	r1, #1
 8000206:	fa01 f202 	lsl.w	r2, r1, r2
 800020a:	4611      	mov	r1, r2
 800020c:	4a11      	ldr	r2, [pc, #68]	@ (8000254 <MNVIC_voidDisableInterrupt+0x6c>)
 800020e:	430b      	orrs	r3, r1
 8000210:	6013      	str	r3, [r2, #0]
    }
    else
    {
        /*error*/
    }
}
 8000212:	e01a      	b.n	800024a <MNVIC_voidDisableInterrupt+0x62>
        else if (Copy_u8InterruptId<=63)
 8000214:	79fb      	ldrb	r3, [r7, #7]
 8000216:	2b3f      	cmp	r3, #63	@ 0x3f
 8000218:	d80a      	bhi.n	8000230 <MNVIC_voidDisableInterrupt+0x48>
            SET_BIT(ICER1,Copy_u8InterruptId);
 800021a:	4b0f      	ldr	r3, [pc, #60]	@ (8000258 <MNVIC_voidDisableInterrupt+0x70>)
 800021c:	681b      	ldr	r3, [r3, #0]
 800021e:	79fa      	ldrb	r2, [r7, #7]
 8000220:	2101      	movs	r1, #1
 8000222:	fa01 f202 	lsl.w	r2, r1, r2
 8000226:	4611      	mov	r1, r2
 8000228:	4a0b      	ldr	r2, [pc, #44]	@ (8000258 <MNVIC_voidDisableInterrupt+0x70>)
 800022a:	430b      	orrs	r3, r1
 800022c:	6013      	str	r3, [r2, #0]
}
 800022e:	e00c      	b.n	800024a <MNVIC_voidDisableInterrupt+0x62>
        else if(Copy_u8InterruptId<=67)
 8000230:	79fb      	ldrb	r3, [r7, #7]
 8000232:	2b43      	cmp	r3, #67	@ 0x43
 8000234:	d809      	bhi.n	800024a <MNVIC_voidDisableInterrupt+0x62>
            SET_BIT(ICER2,Copy_u8InterruptId);
 8000236:	4b09      	ldr	r3, [pc, #36]	@ (800025c <MNVIC_voidDisableInterrupt+0x74>)
 8000238:	681b      	ldr	r3, [r3, #0]
 800023a:	79fa      	ldrb	r2, [r7, #7]
 800023c:	2101      	movs	r1, #1
 800023e:	fa01 f202 	lsl.w	r2, r1, r2
 8000242:	4611      	mov	r1, r2
 8000244:	4a05      	ldr	r2, [pc, #20]	@ (800025c <MNVIC_voidDisableInterrupt+0x74>)
 8000246:	430b      	orrs	r3, r1
 8000248:	6013      	str	r3, [r2, #0]
}
 800024a:	bf00      	nop
 800024c:	370c      	adds	r7, #12
 800024e:	46bd      	mov	sp, r7
 8000250:	bc80      	pop	{r7}
 8000252:	4770      	bx	lr
 8000254:	e000e180 	.word	0xe000e180
 8000258:	e000e184 	.word	0xe000e184
 800025c:	e000e188 	.word	0xe000e188

08000260 <main>:


/***************************** main code Section *****************************/

int main()
{
 8000260:	b580      	push	{r7, lr}
 8000262:	b082      	sub	sp, #8
 8000264:	af00      	add	r7, sp, #0
	MNVIC_voidEnableInterrupt(2);
 8000266:	2002      	movs	r0, #2
 8000268:	f7ff ff82 	bl	8000170 <MNVIC_voidEnableInterrupt>
	MNVIC_voidDisableInterrupt(2);
 800026c:	2002      	movs	r0, #2
 800026e:	f7ff ffbb 	bl	80001e8 <MNVIC_voidDisableInterrupt>
	u8 x= 5;
 8000272:	2305      	movs	r3, #5
 8000274:	71fb      	strb	r3, [r7, #7]

    while(1)
 8000276:	bf00      	nop
 8000278:	e7fd      	b.n	8000276 <main+0x16>
	...

0800027c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800027c:	480d      	ldr	r0, [pc, #52]	@ (80002b4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800027e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000280:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000284:	480c      	ldr	r0, [pc, #48]	@ (80002b8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000286:	490d      	ldr	r1, [pc, #52]	@ (80002bc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000288:	4a0d      	ldr	r2, [pc, #52]	@ (80002c0 <LoopForever+0xe>)
  movs r3, #0
 800028a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800028c:	e002      	b.n	8000294 <LoopCopyDataInit>

0800028e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800028e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000290:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000292:	3304      	adds	r3, #4

08000294 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000294:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000296:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000298:	d3f9      	bcc.n	800028e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800029a:	4a0a      	ldr	r2, [pc, #40]	@ (80002c4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800029c:	4c0a      	ldr	r4, [pc, #40]	@ (80002c8 <LoopForever+0x16>)
  movs r3, #0
 800029e:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002a0:	e001      	b.n	80002a6 <LoopFillZerobss>

080002a2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002a2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002a4:	3204      	adds	r2, #4

080002a6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002a6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002a8:	d3fb      	bcc.n	80002a2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002aa:	f000 f811 	bl	80002d0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ae:	f7ff ffd7 	bl	8000260 <main>

080002b2 <LoopForever>:

LoopForever:
  b LoopForever
 80002b2:	e7fe      	b.n	80002b2 <LoopForever>
  ldr   r0, =_estack
 80002b4:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80002b8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002bc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002c0:	08000338 	.word	0x08000338
  ldr r2, =_sbss
 80002c4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002c8:	2000001c 	.word	0x2000001c

080002cc <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002cc:	e7fe      	b.n	80002cc <ADC1_2_IRQHandler>
	...

080002d0 <__libc_init_array>:
 80002d0:	b570      	push	{r4, r5, r6, lr}
 80002d2:	2600      	movs	r6, #0
 80002d4:	4d0c      	ldr	r5, [pc, #48]	@ (8000308 <__libc_init_array+0x38>)
 80002d6:	4c0d      	ldr	r4, [pc, #52]	@ (800030c <__libc_init_array+0x3c>)
 80002d8:	1b64      	subs	r4, r4, r5
 80002da:	10a4      	asrs	r4, r4, #2
 80002dc:	42a6      	cmp	r6, r4
 80002de:	d109      	bne.n	80002f4 <__libc_init_array+0x24>
 80002e0:	f000 f81a 	bl	8000318 <_init>
 80002e4:	2600      	movs	r6, #0
 80002e6:	4d0a      	ldr	r5, [pc, #40]	@ (8000310 <__libc_init_array+0x40>)
 80002e8:	4c0a      	ldr	r4, [pc, #40]	@ (8000314 <__libc_init_array+0x44>)
 80002ea:	1b64      	subs	r4, r4, r5
 80002ec:	10a4      	asrs	r4, r4, #2
 80002ee:	42a6      	cmp	r6, r4
 80002f0:	d105      	bne.n	80002fe <__libc_init_array+0x2e>
 80002f2:	bd70      	pop	{r4, r5, r6, pc}
 80002f4:	f855 3b04 	ldr.w	r3, [r5], #4
 80002f8:	4798      	blx	r3
 80002fa:	3601      	adds	r6, #1
 80002fc:	e7ee      	b.n	80002dc <__libc_init_array+0xc>
 80002fe:	f855 3b04 	ldr.w	r3, [r5], #4
 8000302:	4798      	blx	r3
 8000304:	3601      	adds	r6, #1
 8000306:	e7f2      	b.n	80002ee <__libc_init_array+0x1e>
 8000308:	08000330 	.word	0x08000330
 800030c:	08000330 	.word	0x08000330
 8000310:	08000330 	.word	0x08000330
 8000314:	08000334 	.word	0x08000334

08000318 <_init>:
 8000318:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800031a:	bf00      	nop
 800031c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800031e:	bc08      	pop	{r3}
 8000320:	469e      	mov	lr, r3
 8000322:	4770      	bx	lr

08000324 <_fini>:
 8000324:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000326:	bf00      	nop
 8000328:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800032a:	bc08      	pop	{r3}
 800032c:	469e      	mov	lr, r3
 800032e:	4770      	bx	lr
