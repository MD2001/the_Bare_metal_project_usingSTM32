
the_Bare_metal_project1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000670  08000130  08000130  00001130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080007a0  080007a8  000017a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080007a0  080007a0  000017a8  2**0
                  CONTENTS
  4 .ARM          00000000  080007a0  080007a0  000017a8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080007a0  080007a8  000017a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080007a0  080007a0  000017a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080007a4  080007a4  000017a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000017a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080007a8  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080007a8  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000017a8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000508  00000000  00000000  000017d1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000024f  00000000  00000000  00001cd9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000108  00000000  00000000  00001f28  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000b2  00000000  00000000  00002030  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001064  00000000  00000000  000020e2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000c33  00000000  00000000  00003146  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00007de0  00000000  00000000  00003d79  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000bb59  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000002c4  00000000  00000000  0000bb9c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004a  00000000  00000000  0000be60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	@ (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	@ (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	@ (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	08000788 	.word	0x08000788

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	@ (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	@ (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	@ (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	08000788 	.word	0x08000788

08000170 <MGPIO_voidSetPinDirection>:
#include "GPIO_privet.h"
#include "GPIO_config.h"

/***************************** Code Section *********************************/
void MGPIO_voidSetPinDirection(u8 Copy_Port,u8 Copy_Pin,u8 Copy_Mode)
{
 8000170:	b480      	push	{r7}
 8000172:	b083      	sub	sp, #12
 8000174:	af00      	add	r7, sp, #0
 8000176:	4603      	mov	r3, r0
 8000178:	71fb      	strb	r3, [r7, #7]
 800017a:	460b      	mov	r3, r1
 800017c:	71bb      	strb	r3, [r7, #6]
 800017e:	4613      	mov	r3, r2
 8000180:	717b      	strb	r3, [r7, #5]
	if(Copy_Port<=2)
 8000182:	79fb      	ldrb	r3, [r7, #7]
 8000184:	2b02      	cmp	r3, #2
 8000186:	f200 8131 	bhi.w	80003ec <MGPIO_voidSetPinDirection+0x27c>
	{
		if(Copy_Pin>=16)
 800018a:	79bb      	ldrb	r3, [r7, #6]
 800018c:	2b0f      	cmp	r3, #15
 800018e:	f240 812d 	bls.w	80003ec <MGPIO_voidSetPinDirection+0x27c>
		{
			switch(Copy_Port)
 8000192:	79fb      	ldrb	r3, [r7, #7]
 8000194:	2b02      	cmp	r3, #2
 8000196:	f000 80ed 	beq.w	8000374 <MGPIO_voidSetPinDirection+0x204>
 800019a:	2b02      	cmp	r3, #2
 800019c:	f300 8126 	bgt.w	80003ec <MGPIO_voidSetPinDirection+0x27c>
 80001a0:	2b00      	cmp	r3, #0
 80001a2:	d002      	beq.n	80001aa <MGPIO_voidSetPinDirection+0x3a>
 80001a4:	2b01      	cmp	r3, #1
 80001a6:	d073      	beq.n	8000290 <MGPIO_voidSetPinDirection+0x120>
	}
	else
	{
		/*error*/
	}
}
 80001a8:	e120      	b.n	80003ec <MGPIO_voidSetPinDirection+0x27c>
									if(Copy_Pin <=7)
 80001aa:	79bb      	ldrb	r3, [r7, #6]
 80001ac:	2b07      	cmp	r3, #7
 80001ae:	d834      	bhi.n	800021a <MGPIO_voidSetPinDirection+0xaa>
										GPIOA_CRL &= ~((0b1111)<<(Copy_Pin*4));
 80001b0:	4b91      	ldr	r3, [pc, #580]	@ (80003f8 <MGPIO_voidSetPinDirection+0x288>)
 80001b2:	681b      	ldr	r3, [r3, #0]
 80001b4:	79ba      	ldrb	r2, [r7, #6]
 80001b6:	0092      	lsls	r2, r2, #2
 80001b8:	210f      	movs	r1, #15
 80001ba:	fa01 f202 	lsl.w	r2, r1, r2
 80001be:	43d2      	mvns	r2, r2
 80001c0:	4611      	mov	r1, r2
 80001c2:	4a8d      	ldr	r2, [pc, #564]	@ (80003f8 <MGPIO_voidSetPinDirection+0x288>)
 80001c4:	400b      	ands	r3, r1
 80001c6:	6013      	str	r3, [r2, #0]
										GPIOA_CRL |= ((Copy_Mode)<<(Copy_Pin*4));
 80001c8:	4b8b      	ldr	r3, [pc, #556]	@ (80003f8 <MGPIO_voidSetPinDirection+0x288>)
 80001ca:	681b      	ldr	r3, [r3, #0]
 80001cc:	7979      	ldrb	r1, [r7, #5]
 80001ce:	79ba      	ldrb	r2, [r7, #6]
 80001d0:	0092      	lsls	r2, r2, #2
 80001d2:	fa01 f202 	lsl.w	r2, r1, r2
 80001d6:	4611      	mov	r1, r2
 80001d8:	4a87      	ldr	r2, [pc, #540]	@ (80003f8 <MGPIO_voidSetPinDirection+0x288>)
 80001da:	430b      	orrs	r3, r1
 80001dc:	6013      	str	r3, [r2, #0]
										if(Copy_Mode == MGPIO_Input_PullUp)
 80001de:	797b      	ldrb	r3, [r7, #5]
 80001e0:	2b08      	cmp	r3, #8
 80001e2:	d10a      	bne.n	80001fa <MGPIO_voidSetPinDirection+0x8a>
											SET_BIT(GPIOA_ODR,Copy_Pin);
 80001e4:	4b85      	ldr	r3, [pc, #532]	@ (80003fc <MGPIO_voidSetPinDirection+0x28c>)
 80001e6:	681b      	ldr	r3, [r3, #0]
 80001e8:	79ba      	ldrb	r2, [r7, #6]
 80001ea:	2101      	movs	r1, #1
 80001ec:	fa01 f202 	lsl.w	r2, r1, r2
 80001f0:	4611      	mov	r1, r2
 80001f2:	4a82      	ldr	r2, [pc, #520]	@ (80003fc <MGPIO_voidSetPinDirection+0x28c>)
 80001f4:	430b      	orrs	r3, r1
 80001f6:	6013      	str	r3, [r2, #0]
									break;
 80001f8:	e0f5      	b.n	80003e6 <MGPIO_voidSetPinDirection+0x276>
										else if(Copy_Mode == MGPIO_Input_PullDown)
 80001fa:	797b      	ldrb	r3, [r7, #5]
 80001fc:	2b08      	cmp	r3, #8
 80001fe:	f040 80f2 	bne.w	80003e6 <MGPIO_voidSetPinDirection+0x276>
											CLR_BIT(GPIOA_ODR,Copy_Pin);
 8000202:	4b7e      	ldr	r3, [pc, #504]	@ (80003fc <MGPIO_voidSetPinDirection+0x28c>)
 8000204:	681b      	ldr	r3, [r3, #0]
 8000206:	79ba      	ldrb	r2, [r7, #6]
 8000208:	2101      	movs	r1, #1
 800020a:	fa01 f202 	lsl.w	r2, r1, r2
 800020e:	43d2      	mvns	r2, r2
 8000210:	4611      	mov	r1, r2
 8000212:	4a7a      	ldr	r2, [pc, #488]	@ (80003fc <MGPIO_voidSetPinDirection+0x28c>)
 8000214:	400b      	ands	r3, r1
 8000216:	6013      	str	r3, [r2, #0]
									break;
 8000218:	e0e5      	b.n	80003e6 <MGPIO_voidSetPinDirection+0x276>
									else if (Copy_Pin <= 15)
 800021a:	79bb      	ldrb	r3, [r7, #6]
 800021c:	2b0f      	cmp	r3, #15
 800021e:	f200 80e2 	bhi.w	80003e6 <MGPIO_voidSetPinDirection+0x276>
										if(Copy_Mode == MGPIO_Input_PullUp)
 8000222:	797b      	ldrb	r3, [r7, #5]
 8000224:	2b08      	cmp	r3, #8
 8000226:	d10a      	bne.n	800023e <MGPIO_voidSetPinDirection+0xce>
											SET_BIT(GPIOA_ODR,Copy_Pin);
 8000228:	4b74      	ldr	r3, [pc, #464]	@ (80003fc <MGPIO_voidSetPinDirection+0x28c>)
 800022a:	681b      	ldr	r3, [r3, #0]
 800022c:	79ba      	ldrb	r2, [r7, #6]
 800022e:	2101      	movs	r1, #1
 8000230:	fa01 f202 	lsl.w	r2, r1, r2
 8000234:	4611      	mov	r1, r2
 8000236:	4a71      	ldr	r2, [pc, #452]	@ (80003fc <MGPIO_voidSetPinDirection+0x28c>)
 8000238:	430b      	orrs	r3, r1
 800023a:	6013      	str	r3, [r2, #0]
 800023c:	e00d      	b.n	800025a <MGPIO_voidSetPinDirection+0xea>
										else if(Copy_Mode == MGPIO_Input_PullDown)
 800023e:	797b      	ldrb	r3, [r7, #5]
 8000240:	2b08      	cmp	r3, #8
 8000242:	d10a      	bne.n	800025a <MGPIO_voidSetPinDirection+0xea>
											CLR_BIT(GPIOA_ODR,Copy_Pin);
 8000244:	4b6d      	ldr	r3, [pc, #436]	@ (80003fc <MGPIO_voidSetPinDirection+0x28c>)
 8000246:	681b      	ldr	r3, [r3, #0]
 8000248:	79ba      	ldrb	r2, [r7, #6]
 800024a:	2101      	movs	r1, #1
 800024c:	fa01 f202 	lsl.w	r2, r1, r2
 8000250:	43d2      	mvns	r2, r2
 8000252:	4611      	mov	r1, r2
 8000254:	4a69      	ldr	r2, [pc, #420]	@ (80003fc <MGPIO_voidSetPinDirection+0x28c>)
 8000256:	400b      	ands	r3, r1
 8000258:	6013      	str	r3, [r2, #0]
										Copy_Pin  -= 8;
 800025a:	79bb      	ldrb	r3, [r7, #6]
 800025c:	3b08      	subs	r3, #8
 800025e:	71bb      	strb	r3, [r7, #6]
										GPIOA_CRH &= ~((0b1111)<<(Copy_Pin*4));
 8000260:	4b67      	ldr	r3, [pc, #412]	@ (8000400 <MGPIO_voidSetPinDirection+0x290>)
 8000262:	681b      	ldr	r3, [r3, #0]
 8000264:	79ba      	ldrb	r2, [r7, #6]
 8000266:	0092      	lsls	r2, r2, #2
 8000268:	210f      	movs	r1, #15
 800026a:	fa01 f202 	lsl.w	r2, r1, r2
 800026e:	43d2      	mvns	r2, r2
 8000270:	4611      	mov	r1, r2
 8000272:	4a63      	ldr	r2, [pc, #396]	@ (8000400 <MGPIO_voidSetPinDirection+0x290>)
 8000274:	400b      	ands	r3, r1
 8000276:	6013      	str	r3, [r2, #0]
									   GPIOA_CRH |= ((Copy_Mode)<<(Copy_Pin*4));
 8000278:	4b61      	ldr	r3, [pc, #388]	@ (8000400 <MGPIO_voidSetPinDirection+0x290>)
 800027a:	681b      	ldr	r3, [r3, #0]
 800027c:	7979      	ldrb	r1, [r7, #5]
 800027e:	79ba      	ldrb	r2, [r7, #6]
 8000280:	0092      	lsls	r2, r2, #2
 8000282:	fa01 f202 	lsl.w	r2, r1, r2
 8000286:	4611      	mov	r1, r2
 8000288:	4a5d      	ldr	r2, [pc, #372]	@ (8000400 <MGPIO_voidSetPinDirection+0x290>)
 800028a:	430b      	orrs	r3, r1
 800028c:	6013      	str	r3, [r2, #0]
									break;
 800028e:	e0aa      	b.n	80003e6 <MGPIO_voidSetPinDirection+0x276>
									if(Copy_Pin <=7)
 8000290:	79bb      	ldrb	r3, [r7, #6]
 8000292:	2b07      	cmp	r3, #7
 8000294:	d834      	bhi.n	8000300 <MGPIO_voidSetPinDirection+0x190>
										GPIOB_CRL &= ~((0b1111)<<(Copy_Pin*4));
 8000296:	4b5b      	ldr	r3, [pc, #364]	@ (8000404 <MGPIO_voidSetPinDirection+0x294>)
 8000298:	681b      	ldr	r3, [r3, #0]
 800029a:	79ba      	ldrb	r2, [r7, #6]
 800029c:	0092      	lsls	r2, r2, #2
 800029e:	210f      	movs	r1, #15
 80002a0:	fa01 f202 	lsl.w	r2, r1, r2
 80002a4:	43d2      	mvns	r2, r2
 80002a6:	4611      	mov	r1, r2
 80002a8:	4a56      	ldr	r2, [pc, #344]	@ (8000404 <MGPIO_voidSetPinDirection+0x294>)
 80002aa:	400b      	ands	r3, r1
 80002ac:	6013      	str	r3, [r2, #0]
										GPIOB_CRL |= ((Copy_Mode)<<(Copy_Pin*4));
 80002ae:	4b55      	ldr	r3, [pc, #340]	@ (8000404 <MGPIO_voidSetPinDirection+0x294>)
 80002b0:	681b      	ldr	r3, [r3, #0]
 80002b2:	7979      	ldrb	r1, [r7, #5]
 80002b4:	79ba      	ldrb	r2, [r7, #6]
 80002b6:	0092      	lsls	r2, r2, #2
 80002b8:	fa01 f202 	lsl.w	r2, r1, r2
 80002bc:	4611      	mov	r1, r2
 80002be:	4a51      	ldr	r2, [pc, #324]	@ (8000404 <MGPIO_voidSetPinDirection+0x294>)
 80002c0:	430b      	orrs	r3, r1
 80002c2:	6013      	str	r3, [r2, #0]
										if(Copy_Mode == MGPIO_Input_PullUp)
 80002c4:	797b      	ldrb	r3, [r7, #5]
 80002c6:	2b08      	cmp	r3, #8
 80002c8:	d10a      	bne.n	80002e0 <MGPIO_voidSetPinDirection+0x170>
											SET_BIT(GPIOB_ODR,Copy_Pin);
 80002ca:	4b4f      	ldr	r3, [pc, #316]	@ (8000408 <MGPIO_voidSetPinDirection+0x298>)
 80002cc:	681b      	ldr	r3, [r3, #0]
 80002ce:	79ba      	ldrb	r2, [r7, #6]
 80002d0:	2101      	movs	r1, #1
 80002d2:	fa01 f202 	lsl.w	r2, r1, r2
 80002d6:	4611      	mov	r1, r2
 80002d8:	4a4b      	ldr	r2, [pc, #300]	@ (8000408 <MGPIO_voidSetPinDirection+0x298>)
 80002da:	430b      	orrs	r3, r1
 80002dc:	6013      	str	r3, [r2, #0]
									break;
 80002de:	e084      	b.n	80003ea <MGPIO_voidSetPinDirection+0x27a>
										else if(Copy_Mode == MGPIO_Input_PullDown)
 80002e0:	797b      	ldrb	r3, [r7, #5]
 80002e2:	2b08      	cmp	r3, #8
 80002e4:	f040 8081 	bne.w	80003ea <MGPIO_voidSetPinDirection+0x27a>
											CLR_BIT(GPIOB_ODR,Copy_Pin);
 80002e8:	4b47      	ldr	r3, [pc, #284]	@ (8000408 <MGPIO_voidSetPinDirection+0x298>)
 80002ea:	681b      	ldr	r3, [r3, #0]
 80002ec:	79ba      	ldrb	r2, [r7, #6]
 80002ee:	2101      	movs	r1, #1
 80002f0:	fa01 f202 	lsl.w	r2, r1, r2
 80002f4:	43d2      	mvns	r2, r2
 80002f6:	4611      	mov	r1, r2
 80002f8:	4a43      	ldr	r2, [pc, #268]	@ (8000408 <MGPIO_voidSetPinDirection+0x298>)
 80002fa:	400b      	ands	r3, r1
 80002fc:	6013      	str	r3, [r2, #0]
									break;
 80002fe:	e074      	b.n	80003ea <MGPIO_voidSetPinDirection+0x27a>
									else if (Copy_Pin <= 15)
 8000300:	79bb      	ldrb	r3, [r7, #6]
 8000302:	2b0f      	cmp	r3, #15
 8000304:	d871      	bhi.n	80003ea <MGPIO_voidSetPinDirection+0x27a>
										if(Copy_Mode == MGPIO_Input_PullUp)
 8000306:	797b      	ldrb	r3, [r7, #5]
 8000308:	2b08      	cmp	r3, #8
 800030a:	d10a      	bne.n	8000322 <MGPIO_voidSetPinDirection+0x1b2>
											SET_BIT(GPIOB_ODR,Copy_Pin);
 800030c:	4b3e      	ldr	r3, [pc, #248]	@ (8000408 <MGPIO_voidSetPinDirection+0x298>)
 800030e:	681b      	ldr	r3, [r3, #0]
 8000310:	79ba      	ldrb	r2, [r7, #6]
 8000312:	2101      	movs	r1, #1
 8000314:	fa01 f202 	lsl.w	r2, r1, r2
 8000318:	4611      	mov	r1, r2
 800031a:	4a3b      	ldr	r2, [pc, #236]	@ (8000408 <MGPIO_voidSetPinDirection+0x298>)
 800031c:	430b      	orrs	r3, r1
 800031e:	6013      	str	r3, [r2, #0]
 8000320:	e00d      	b.n	800033e <MGPIO_voidSetPinDirection+0x1ce>
										else if(Copy_Mode == MGPIO_Input_PullDown)
 8000322:	797b      	ldrb	r3, [r7, #5]
 8000324:	2b08      	cmp	r3, #8
 8000326:	d10a      	bne.n	800033e <MGPIO_voidSetPinDirection+0x1ce>
											CLR_BIT(GPIOB_ODR,Copy_Pin);
 8000328:	4b37      	ldr	r3, [pc, #220]	@ (8000408 <MGPIO_voidSetPinDirection+0x298>)
 800032a:	681b      	ldr	r3, [r3, #0]
 800032c:	79ba      	ldrb	r2, [r7, #6]
 800032e:	2101      	movs	r1, #1
 8000330:	fa01 f202 	lsl.w	r2, r1, r2
 8000334:	43d2      	mvns	r2, r2
 8000336:	4611      	mov	r1, r2
 8000338:	4a33      	ldr	r2, [pc, #204]	@ (8000408 <MGPIO_voidSetPinDirection+0x298>)
 800033a:	400b      	ands	r3, r1
 800033c:	6013      	str	r3, [r2, #0]
										Copy_Pin  -= 8;
 800033e:	79bb      	ldrb	r3, [r7, #6]
 8000340:	3b08      	subs	r3, #8
 8000342:	71bb      	strb	r3, [r7, #6]
										GPIOB_CRH &= ~((0b1111)<<(Copy_Pin*4));
 8000344:	4b31      	ldr	r3, [pc, #196]	@ (800040c <MGPIO_voidSetPinDirection+0x29c>)
 8000346:	681b      	ldr	r3, [r3, #0]
 8000348:	79ba      	ldrb	r2, [r7, #6]
 800034a:	0092      	lsls	r2, r2, #2
 800034c:	210f      	movs	r1, #15
 800034e:	fa01 f202 	lsl.w	r2, r1, r2
 8000352:	43d2      	mvns	r2, r2
 8000354:	4611      	mov	r1, r2
 8000356:	4a2d      	ldr	r2, [pc, #180]	@ (800040c <MGPIO_voidSetPinDirection+0x29c>)
 8000358:	400b      	ands	r3, r1
 800035a:	6013      	str	r3, [r2, #0]
									   GPIOB_CRH |= ((Copy_Mode)<<(Copy_Pin*4));
 800035c:	4b2b      	ldr	r3, [pc, #172]	@ (800040c <MGPIO_voidSetPinDirection+0x29c>)
 800035e:	681b      	ldr	r3, [r3, #0]
 8000360:	7979      	ldrb	r1, [r7, #5]
 8000362:	79ba      	ldrb	r2, [r7, #6]
 8000364:	0092      	lsls	r2, r2, #2
 8000366:	fa01 f202 	lsl.w	r2, r1, r2
 800036a:	4611      	mov	r1, r2
 800036c:	4a27      	ldr	r2, [pc, #156]	@ (800040c <MGPIO_voidSetPinDirection+0x29c>)
 800036e:	430b      	orrs	r3, r1
 8000370:	6013      	str	r3, [r2, #0]
									break;
 8000372:	e03a      	b.n	80003ea <MGPIO_voidSetPinDirection+0x27a>
									if(Copy_Pin <=7)
 8000374:	79bb      	ldrb	r3, [r7, #6]
 8000376:	2b07      	cmp	r3, #7
 8000378:	d817      	bhi.n	80003aa <MGPIO_voidSetPinDirection+0x23a>
										GPIOC_CRL &= ~((0b1111)<<(Copy_Pin*4));
 800037a:	4b25      	ldr	r3, [pc, #148]	@ (8000410 <MGPIO_voidSetPinDirection+0x2a0>)
 800037c:	681b      	ldr	r3, [r3, #0]
 800037e:	79ba      	ldrb	r2, [r7, #6]
 8000380:	0092      	lsls	r2, r2, #2
 8000382:	210f      	movs	r1, #15
 8000384:	fa01 f202 	lsl.w	r2, r1, r2
 8000388:	43d2      	mvns	r2, r2
 800038a:	4611      	mov	r1, r2
 800038c:	4a20      	ldr	r2, [pc, #128]	@ (8000410 <MGPIO_voidSetPinDirection+0x2a0>)
 800038e:	400b      	ands	r3, r1
 8000390:	6013      	str	r3, [r2, #0]
										GPIOC_CRL |= ((Copy_Mode)<<(Copy_Pin*4));
 8000392:	4b1f      	ldr	r3, [pc, #124]	@ (8000410 <MGPIO_voidSetPinDirection+0x2a0>)
 8000394:	681b      	ldr	r3, [r3, #0]
 8000396:	7979      	ldrb	r1, [r7, #5]
 8000398:	79ba      	ldrb	r2, [r7, #6]
 800039a:	0092      	lsls	r2, r2, #2
 800039c:	fa01 f202 	lsl.w	r2, r1, r2
 80003a0:	4611      	mov	r1, r2
 80003a2:	4a1b      	ldr	r2, [pc, #108]	@ (8000410 <MGPIO_voidSetPinDirection+0x2a0>)
 80003a4:	430b      	orrs	r3, r1
 80003a6:	6013      	str	r3, [r2, #0]
 80003a8:	e011      	b.n	80003ce <MGPIO_voidSetPinDirection+0x25e>
									else if (Copy_Pin <= 15)
 80003aa:	79bb      	ldrb	r3, [r7, #6]
 80003ac:	2b0f      	cmp	r3, #15
 80003ae:	d80e      	bhi.n	80003ce <MGPIO_voidSetPinDirection+0x25e>
										Copy_Pin  -= 8;
 80003b0:	79bb      	ldrb	r3, [r7, #6]
 80003b2:	3b08      	subs	r3, #8
 80003b4:	71bb      	strb	r3, [r7, #6]
										GPIOC_CRH &= ~((0b1111)<<(Copy_Pin*4));
 80003b6:	4b17      	ldr	r3, [pc, #92]	@ (8000414 <MGPIO_voidSetPinDirection+0x2a4>)
 80003b8:	681b      	ldr	r3, [r3, #0]
 80003ba:	79ba      	ldrb	r2, [r7, #6]
 80003bc:	0092      	lsls	r2, r2, #2
 80003be:	210f      	movs	r1, #15
 80003c0:	fa01 f202 	lsl.w	r2, r1, r2
 80003c4:	43d2      	mvns	r2, r2
 80003c6:	4611      	mov	r1, r2
 80003c8:	4a12      	ldr	r2, [pc, #72]	@ (8000414 <MGPIO_voidSetPinDirection+0x2a4>)
 80003ca:	400b      	ands	r3, r1
 80003cc:	6013      	str	r3, [r2, #0]
									}   GPIOC_CRH |= ((Copy_Mode)<<(Copy_Pin*4));
 80003ce:	4b11      	ldr	r3, [pc, #68]	@ (8000414 <MGPIO_voidSetPinDirection+0x2a4>)
 80003d0:	681b      	ldr	r3, [r3, #0]
 80003d2:	7979      	ldrb	r1, [r7, #5]
 80003d4:	79ba      	ldrb	r2, [r7, #6]
 80003d6:	0092      	lsls	r2, r2, #2
 80003d8:	fa01 f202 	lsl.w	r2, r1, r2
 80003dc:	4611      	mov	r1, r2
 80003de:	4a0d      	ldr	r2, [pc, #52]	@ (8000414 <MGPIO_voidSetPinDirection+0x2a4>)
 80003e0:	430b      	orrs	r3, r1
 80003e2:	6013      	str	r3, [r2, #0]
									break;
 80003e4:	e002      	b.n	80003ec <MGPIO_voidSetPinDirection+0x27c>
									break;
 80003e6:	bf00      	nop
 80003e8:	e000      	b.n	80003ec <MGPIO_voidSetPinDirection+0x27c>
									break;
 80003ea:	bf00      	nop
}
 80003ec:	bf00      	nop
 80003ee:	370c      	adds	r7, #12
 80003f0:	46bd      	mov	sp, r7
 80003f2:	bc80      	pop	{r7}
 80003f4:	4770      	bx	lr
 80003f6:	bf00      	nop
 80003f8:	40010800 	.word	0x40010800
 80003fc:	4001080c 	.word	0x4001080c
 8000400:	40010804 	.word	0x40010804
 8000404:	40010c00 	.word	0x40010c00
 8000408:	40010c0c 	.word	0x40010c0c
 800040c:	40010c04 	.word	0x40010c04
 8000410:	40011000 	.word	0x40011000
 8000414:	40011004 	.word	0x40011004

08000418 <MGPIO_voidSetPinValue>:

void MGPIO_voidSetPinValue(u8 Copy_Port,u8 Copy_Pin,u8 Copy_Value)
{
 8000418:	b480      	push	{r7}
 800041a:	b083      	sub	sp, #12
 800041c:	af00      	add	r7, sp, #0
 800041e:	4603      	mov	r3, r0
 8000420:	71fb      	strb	r3, [r7, #7]
 8000422:	460b      	mov	r3, r1
 8000424:	71bb      	strb	r3, [r7, #6]
 8000426:	4613      	mov	r3, r2
 8000428:	717b      	strb	r3, [r7, #5]
	if(Copy_Port<=2)
 800042a:	79fb      	ldrb	r3, [r7, #7]
 800042c:	2b02      	cmp	r3, #2
 800042e:	d865      	bhi.n	80004fc <MGPIO_voidSetPinValue+0xe4>
	{
		if(Copy_Pin>=16)
 8000430:	79bb      	ldrb	r3, [r7, #6]
 8000432:	2b0f      	cmp	r3, #15
 8000434:	d962      	bls.n	80004fc <MGPIO_voidSetPinValue+0xe4>
		{
			switch(Copy_Port)
 8000436:	79fb      	ldrb	r3, [r7, #7]
 8000438:	2b02      	cmp	r3, #2
 800043a:	d03e      	beq.n	80004ba <MGPIO_voidSetPinValue+0xa2>
 800043c:	2b02      	cmp	r3, #2
 800043e:	dc5d      	bgt.n	80004fc <MGPIO_voidSetPinValue+0xe4>
 8000440:	2b00      	cmp	r3, #0
 8000442:	d002      	beq.n	800044a <MGPIO_voidSetPinValue+0x32>
 8000444:	2b01      	cmp	r3, #1
 8000446:	d01c      	beq.n	8000482 <MGPIO_voidSetPinValue+0x6a>
	}
	else
	{
		/*error*/
	}
}
 8000448:	e058      	b.n	80004fc <MGPIO_voidSetPinValue+0xe4>
									if(Copy_Value == MGPIO_High) 
 800044a:	797b      	ldrb	r3, [r7, #5]
 800044c:	2b01      	cmp	r3, #1
 800044e:	d10a      	bne.n	8000466 <MGPIO_voidSetPinValue+0x4e>
									{SET_BIT(GPIOA_BSRR,Copy_Pin);}
 8000450:	4b2d      	ldr	r3, [pc, #180]	@ (8000508 <MGPIO_voidSetPinValue+0xf0>)
 8000452:	681b      	ldr	r3, [r3, #0]
 8000454:	79ba      	ldrb	r2, [r7, #6]
 8000456:	2101      	movs	r1, #1
 8000458:	fa01 f202 	lsl.w	r2, r1, r2
 800045c:	4611      	mov	r1, r2
 800045e:	4a2a      	ldr	r2, [pc, #168]	@ (8000508 <MGPIO_voidSetPinValue+0xf0>)
 8000460:	430b      	orrs	r3, r1
 8000462:	6013      	str	r3, [r2, #0]
									break;
 8000464:	e045      	b.n	80004f2 <MGPIO_voidSetPinValue+0xda>
									else if (Copy_Value == MGPIO_Low)
 8000466:	797b      	ldrb	r3, [r7, #5]
 8000468:	2b00      	cmp	r3, #0
 800046a:	d142      	bne.n	80004f2 <MGPIO_voidSetPinValue+0xda>
									{SET_BIT(GPIOA_BRR,Copy_Pin);}
 800046c:	4b27      	ldr	r3, [pc, #156]	@ (800050c <MGPIO_voidSetPinValue+0xf4>)
 800046e:	681b      	ldr	r3, [r3, #0]
 8000470:	79ba      	ldrb	r2, [r7, #6]
 8000472:	2101      	movs	r1, #1
 8000474:	fa01 f202 	lsl.w	r2, r1, r2
 8000478:	4611      	mov	r1, r2
 800047a:	4a24      	ldr	r2, [pc, #144]	@ (800050c <MGPIO_voidSetPinValue+0xf4>)
 800047c:	430b      	orrs	r3, r1
 800047e:	6013      	str	r3, [r2, #0]
									break;
 8000480:	e037      	b.n	80004f2 <MGPIO_voidSetPinValue+0xda>
				case MGPIO_GPIOB :	if(Copy_Value == MGPIO_High) 
 8000482:	797b      	ldrb	r3, [r7, #5]
 8000484:	2b01      	cmp	r3, #1
 8000486:	d10a      	bne.n	800049e <MGPIO_voidSetPinValue+0x86>
				                    {SET_BIT(GPIOB_BSRR,Copy_Pin);}
 8000488:	4b21      	ldr	r3, [pc, #132]	@ (8000510 <MGPIO_voidSetPinValue+0xf8>)
 800048a:	681b      	ldr	r3, [r3, #0]
 800048c:	79ba      	ldrb	r2, [r7, #6]
 800048e:	2101      	movs	r1, #1
 8000490:	fa01 f202 	lsl.w	r2, r1, r2
 8000494:	4611      	mov	r1, r2
 8000496:	4a1e      	ldr	r2, [pc, #120]	@ (8000510 <MGPIO_voidSetPinValue+0xf8>)
 8000498:	430b      	orrs	r3, r1
 800049a:	6013      	str	r3, [r2, #0]
				                    break;
 800049c:	e02b      	b.n	80004f6 <MGPIO_voidSetPinValue+0xde>
				                    else if (Copy_Value == MGPIO_Low)
 800049e:	797b      	ldrb	r3, [r7, #5]
 80004a0:	2b00      	cmp	r3, #0
 80004a2:	d128      	bne.n	80004f6 <MGPIO_voidSetPinValue+0xde>
				                    {SET_BIT(GPIOB_BRR,Copy_Pin);}
 80004a4:	4b1b      	ldr	r3, [pc, #108]	@ (8000514 <MGPIO_voidSetPinValue+0xfc>)
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	79ba      	ldrb	r2, [r7, #6]
 80004aa:	2101      	movs	r1, #1
 80004ac:	fa01 f202 	lsl.w	r2, r1, r2
 80004b0:	4611      	mov	r1, r2
 80004b2:	4a18      	ldr	r2, [pc, #96]	@ (8000514 <MGPIO_voidSetPinValue+0xfc>)
 80004b4:	430b      	orrs	r3, r1
 80004b6:	6013      	str	r3, [r2, #0]
				                    break;
 80004b8:	e01d      	b.n	80004f6 <MGPIO_voidSetPinValue+0xde>
				case MGPIO_GPIOC :	if(Copy_Value == MGPIO_High) 
 80004ba:	797b      	ldrb	r3, [r7, #5]
 80004bc:	2b01      	cmp	r3, #1
 80004be:	d10a      	bne.n	80004d6 <MGPIO_voidSetPinValue+0xbe>
				                    {SET_BIT(GPIOC_BSRR,Copy_Pin);}
 80004c0:	4b15      	ldr	r3, [pc, #84]	@ (8000518 <MGPIO_voidSetPinValue+0x100>)
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	79ba      	ldrb	r2, [r7, #6]
 80004c6:	2101      	movs	r1, #1
 80004c8:	fa01 f202 	lsl.w	r2, r1, r2
 80004cc:	4611      	mov	r1, r2
 80004ce:	4a12      	ldr	r2, [pc, #72]	@ (8000518 <MGPIO_voidSetPinValue+0x100>)
 80004d0:	430b      	orrs	r3, r1
 80004d2:	6013      	str	r3, [r2, #0]
				                    break;
 80004d4:	e011      	b.n	80004fa <MGPIO_voidSetPinValue+0xe2>
				                    else if (Copy_Value == MGPIO_Low)
 80004d6:	797b      	ldrb	r3, [r7, #5]
 80004d8:	2b00      	cmp	r3, #0
 80004da:	d10e      	bne.n	80004fa <MGPIO_voidSetPinValue+0xe2>
				                    {SET_BIT(GPIOC_BRR,Copy_Pin);}
 80004dc:	4b0f      	ldr	r3, [pc, #60]	@ (800051c <MGPIO_voidSetPinValue+0x104>)
 80004de:	681b      	ldr	r3, [r3, #0]
 80004e0:	79ba      	ldrb	r2, [r7, #6]
 80004e2:	2101      	movs	r1, #1
 80004e4:	fa01 f202 	lsl.w	r2, r1, r2
 80004e8:	4611      	mov	r1, r2
 80004ea:	4a0c      	ldr	r2, [pc, #48]	@ (800051c <MGPIO_voidSetPinValue+0x104>)
 80004ec:	430b      	orrs	r3, r1
 80004ee:	6013      	str	r3, [r2, #0]
				                    break;
 80004f0:	e003      	b.n	80004fa <MGPIO_voidSetPinValue+0xe2>
									break;
 80004f2:	bf00      	nop
 80004f4:	e002      	b.n	80004fc <MGPIO_voidSetPinValue+0xe4>
				                    break;
 80004f6:	bf00      	nop
 80004f8:	e000      	b.n	80004fc <MGPIO_voidSetPinValue+0xe4>
				                    break;
 80004fa:	bf00      	nop
}
 80004fc:	bf00      	nop
 80004fe:	370c      	adds	r7, #12
 8000500:	46bd      	mov	sp, r7
 8000502:	bc80      	pop	{r7}
 8000504:	4770      	bx	lr
 8000506:	bf00      	nop
 8000508:	40010810 	.word	0x40010810
 800050c:	40010814 	.word	0x40010814
 8000510:	40010c10 	.word	0x40010c10
 8000514:	40010c14 	.word	0x40010c14
 8000518:	40011010 	.word	0x40011010
 800051c:	40011014 	.word	0x40011014

08000520 <MNVIC_voidEnableInterrupt>:
#include "NVIC_config.h"

/***************************** Code Section *********************************/

void MNVIC_voidEnableInterrupt(u8 Copy_u8InterruptId)
{
 8000520:	b480      	push	{r7}
 8000522:	b083      	sub	sp, #12
 8000524:	af00      	add	r7, sp, #0
 8000526:	4603      	mov	r3, r0
 8000528:	71fb      	strb	r3, [r7, #7]
    if(Copy_u8InterruptId < 67)
 800052a:	79fb      	ldrb	r3, [r7, #7]
 800052c:	2b42      	cmp	r3, #66	@ 0x42
 800052e:	d828      	bhi.n	8000582 <MNVIC_voidEnableInterrupt+0x62>
    {
        if(Copy_u8InterruptId <= 31)
 8000530:	79fb      	ldrb	r3, [r7, #7]
 8000532:	2b1f      	cmp	r3, #31
 8000534:	d80a      	bhi.n	800054c <MNVIC_voidEnableInterrupt+0x2c>
        {
            SET_BIT(ISER0,Copy_u8InterruptId);
 8000536:	4b15      	ldr	r3, [pc, #84]	@ (800058c <MNVIC_voidEnableInterrupt+0x6c>)
 8000538:	681b      	ldr	r3, [r3, #0]
 800053a:	79fa      	ldrb	r2, [r7, #7]
 800053c:	2101      	movs	r1, #1
 800053e:	fa01 f202 	lsl.w	r2, r1, r2
 8000542:	4611      	mov	r1, r2
 8000544:	4a11      	ldr	r2, [pc, #68]	@ (800058c <MNVIC_voidEnableInterrupt+0x6c>)
 8000546:	430b      	orrs	r3, r1
 8000548:	6013      	str	r3, [r2, #0]
    }
    else
    {
       /*error*/
    }
}
 800054a:	e01a      	b.n	8000582 <MNVIC_voidEnableInterrupt+0x62>
        else if (Copy_u8InterruptId<=63)
 800054c:	79fb      	ldrb	r3, [r7, #7]
 800054e:	2b3f      	cmp	r3, #63	@ 0x3f
 8000550:	d80a      	bhi.n	8000568 <MNVIC_voidEnableInterrupt+0x48>
            SET_BIT(ISER1,Copy_u8InterruptId);
 8000552:	4b0f      	ldr	r3, [pc, #60]	@ (8000590 <MNVIC_voidEnableInterrupt+0x70>)
 8000554:	681b      	ldr	r3, [r3, #0]
 8000556:	79fa      	ldrb	r2, [r7, #7]
 8000558:	2101      	movs	r1, #1
 800055a:	fa01 f202 	lsl.w	r2, r1, r2
 800055e:	4611      	mov	r1, r2
 8000560:	4a0b      	ldr	r2, [pc, #44]	@ (8000590 <MNVIC_voidEnableInterrupt+0x70>)
 8000562:	430b      	orrs	r3, r1
 8000564:	6013      	str	r3, [r2, #0]
}
 8000566:	e00c      	b.n	8000582 <MNVIC_voidEnableInterrupt+0x62>
        else if(Copy_u8InterruptId<=67)
 8000568:	79fb      	ldrb	r3, [r7, #7]
 800056a:	2b43      	cmp	r3, #67	@ 0x43
 800056c:	d809      	bhi.n	8000582 <MNVIC_voidEnableInterrupt+0x62>
            SET_BIT(ISER2,Copy_u8InterruptId);
 800056e:	4b09      	ldr	r3, [pc, #36]	@ (8000594 <MNVIC_voidEnableInterrupt+0x74>)
 8000570:	681b      	ldr	r3, [r3, #0]
 8000572:	79fa      	ldrb	r2, [r7, #7]
 8000574:	2101      	movs	r1, #1
 8000576:	fa01 f202 	lsl.w	r2, r1, r2
 800057a:	4611      	mov	r1, r2
 800057c:	4a05      	ldr	r2, [pc, #20]	@ (8000594 <MNVIC_voidEnableInterrupt+0x74>)
 800057e:	430b      	orrs	r3, r1
 8000580:	6013      	str	r3, [r2, #0]
}
 8000582:	bf00      	nop
 8000584:	370c      	adds	r7, #12
 8000586:	46bd      	mov	sp, r7
 8000588:	bc80      	pop	{r7}
 800058a:	4770      	bx	lr
 800058c:	e000e100 	.word	0xe000e100
 8000590:	e000e104 	.word	0xe000e104
 8000594:	e000e108 	.word	0xe000e108

08000598 <MNVIC_voidSetPindingFlag>:
        /*error*/
    }
}

void MNVIC_voidSetPindingFlag(u8 Copy_u8InterruptId)
{
 8000598:	b480      	push	{r7}
 800059a:	b083      	sub	sp, #12
 800059c:	af00      	add	r7, sp, #0
 800059e:	4603      	mov	r3, r0
 80005a0:	71fb      	strb	r3, [r7, #7]
    if(Copy_u8InterruptId < 67)
 80005a2:	79fb      	ldrb	r3, [r7, #7]
 80005a4:	2b42      	cmp	r3, #66	@ 0x42
 80005a6:	d828      	bhi.n	80005fa <MNVIC_voidSetPindingFlag+0x62>
    {
        if(Copy_u8InterruptId<=31)
 80005a8:	79fb      	ldrb	r3, [r7, #7]
 80005aa:	2b1f      	cmp	r3, #31
 80005ac:	d80a      	bhi.n	80005c4 <MNVIC_voidSetPindingFlag+0x2c>
        {
            SET_BIT(ISPR0,Copy_u8InterruptId);
 80005ae:	4b15      	ldr	r3, [pc, #84]	@ (8000604 <MNVIC_voidSetPindingFlag+0x6c>)
 80005b0:	681b      	ldr	r3, [r3, #0]
 80005b2:	79fa      	ldrb	r2, [r7, #7]
 80005b4:	2101      	movs	r1, #1
 80005b6:	fa01 f202 	lsl.w	r2, r1, r2
 80005ba:	4611      	mov	r1, r2
 80005bc:	4a11      	ldr	r2, [pc, #68]	@ (8000604 <MNVIC_voidSetPindingFlag+0x6c>)
 80005be:	430b      	orrs	r3, r1
 80005c0:	6013      	str	r3, [r2, #0]
    }
    else
    {
         /*error*/
    }
}
 80005c2:	e01a      	b.n	80005fa <MNVIC_voidSetPindingFlag+0x62>
        else if (Copy_u8InterruptId<=63)
 80005c4:	79fb      	ldrb	r3, [r7, #7]
 80005c6:	2b3f      	cmp	r3, #63	@ 0x3f
 80005c8:	d80a      	bhi.n	80005e0 <MNVIC_voidSetPindingFlag+0x48>
            SET_BIT(ISPR1,Copy_u8InterruptId);
 80005ca:	4b0f      	ldr	r3, [pc, #60]	@ (8000608 <MNVIC_voidSetPindingFlag+0x70>)
 80005cc:	681b      	ldr	r3, [r3, #0]
 80005ce:	79fa      	ldrb	r2, [r7, #7]
 80005d0:	2101      	movs	r1, #1
 80005d2:	fa01 f202 	lsl.w	r2, r1, r2
 80005d6:	4611      	mov	r1, r2
 80005d8:	4a0b      	ldr	r2, [pc, #44]	@ (8000608 <MNVIC_voidSetPindingFlag+0x70>)
 80005da:	430b      	orrs	r3, r1
 80005dc:	6013      	str	r3, [r2, #0]
}
 80005de:	e00c      	b.n	80005fa <MNVIC_voidSetPindingFlag+0x62>
        else if(Copy_u8InterruptId<=67)
 80005e0:	79fb      	ldrb	r3, [r7, #7]
 80005e2:	2b43      	cmp	r3, #67	@ 0x43
 80005e4:	d809      	bhi.n	80005fa <MNVIC_voidSetPindingFlag+0x62>
            SET_BIT(ISPR2,Copy_u8InterruptId);
 80005e6:	4b09      	ldr	r3, [pc, #36]	@ (800060c <MNVIC_voidSetPindingFlag+0x74>)
 80005e8:	681b      	ldr	r3, [r3, #0]
 80005ea:	79fa      	ldrb	r2, [r7, #7]
 80005ec:	2101      	movs	r1, #1
 80005ee:	fa01 f202 	lsl.w	r2, r1, r2
 80005f2:	4611      	mov	r1, r2
 80005f4:	4a05      	ldr	r2, [pc, #20]	@ (800060c <MNVIC_voidSetPindingFlag+0x74>)
 80005f6:	430b      	orrs	r3, r1
 80005f8:	6013      	str	r3, [r2, #0]
}
 80005fa:	bf00      	nop
 80005fc:	370c      	adds	r7, #12
 80005fe:	46bd      	mov	sp, r7
 8000600:	bc80      	pop	{r7}
 8000602:	4770      	bx	lr
 8000604:	e000e200 	.word	0xe000e200
 8000608:	e000e204 	.word	0xe000e204
 800060c:	e000e208 	.word	0xe000e208

08000610 <MRCC_voidEnablePeripheral>:
}	



void MRCC_voidEnablePeripheral(u8 Copy_IdBus,u8 Copy_Peripheral)
{
 8000610:	b480      	push	{r7}
 8000612:	b083      	sub	sp, #12
 8000614:	af00      	add	r7, sp, #0
 8000616:	4603      	mov	r3, r0
 8000618:	460a      	mov	r2, r1
 800061a:	71fb      	strb	r3, [r7, #7]
 800061c:	4613      	mov	r3, r2
 800061e:	71bb      	strb	r3, [r7, #6]
	if(Copy_Peripheral<=31)
 8000620:	79bb      	ldrb	r3, [r7, #6]
 8000622:	2b1f      	cmp	r3, #31
 8000624:	d82a      	bhi.n	800067c <MRCC_voidEnablePeripheral+0x6c>
	{	
	switch(Copy_IdBus)
 8000626:	79fb      	ldrb	r3, [r7, #7]
 8000628:	2b03      	cmp	r3, #3
 800062a:	d01c      	beq.n	8000666 <MRCC_voidEnablePeripheral+0x56>
 800062c:	2b03      	cmp	r3, #3
 800062e:	dc25      	bgt.n	800067c <MRCC_voidEnablePeripheral+0x6c>
 8000630:	2b01      	cmp	r3, #1
 8000632:	d002      	beq.n	800063a <MRCC_voidEnablePeripheral+0x2a>
 8000634:	2b02      	cmp	r3, #2
 8000636:	d00b      	beq.n	8000650 <MRCC_voidEnablePeripheral+0x40>
	else
	{
		//error
	}
	
}
 8000638:	e020      	b.n	800067c <MRCC_voidEnablePeripheral+0x6c>
		case RCC_AHB	:SET_BIT(RCC_AHBENR,Copy_Peripheral);break;
 800063a:	4b13      	ldr	r3, [pc, #76]	@ (8000688 <MRCC_voidEnablePeripheral+0x78>)
 800063c:	681b      	ldr	r3, [r3, #0]
 800063e:	79ba      	ldrb	r2, [r7, #6]
 8000640:	2101      	movs	r1, #1
 8000642:	fa01 f202 	lsl.w	r2, r1, r2
 8000646:	4611      	mov	r1, r2
 8000648:	4a0f      	ldr	r2, [pc, #60]	@ (8000688 <MRCC_voidEnablePeripheral+0x78>)
 800064a:	430b      	orrs	r3, r1
 800064c:	6013      	str	r3, [r2, #0]
 800064e:	e015      	b.n	800067c <MRCC_voidEnablePeripheral+0x6c>
		case RCC_APB1   :SET_BIT(RCC_APB1ENR,Copy_Peripheral);break;
 8000650:	4b0e      	ldr	r3, [pc, #56]	@ (800068c <MRCC_voidEnablePeripheral+0x7c>)
 8000652:	681b      	ldr	r3, [r3, #0]
 8000654:	79ba      	ldrb	r2, [r7, #6]
 8000656:	2101      	movs	r1, #1
 8000658:	fa01 f202 	lsl.w	r2, r1, r2
 800065c:	4611      	mov	r1, r2
 800065e:	4a0b      	ldr	r2, [pc, #44]	@ (800068c <MRCC_voidEnablePeripheral+0x7c>)
 8000660:	430b      	orrs	r3, r1
 8000662:	6013      	str	r3, [r2, #0]
 8000664:	e00a      	b.n	800067c <MRCC_voidEnablePeripheral+0x6c>
		case RCC_APB2   :SET_BIT(RCC_APB2ENR,Copy_Peripheral);break;
 8000666:	4b0a      	ldr	r3, [pc, #40]	@ (8000690 <MRCC_voidEnablePeripheral+0x80>)
 8000668:	681b      	ldr	r3, [r3, #0]
 800066a:	79ba      	ldrb	r2, [r7, #6]
 800066c:	2101      	movs	r1, #1
 800066e:	fa01 f202 	lsl.w	r2, r1, r2
 8000672:	4611      	mov	r1, r2
 8000674:	4a06      	ldr	r2, [pc, #24]	@ (8000690 <MRCC_voidEnablePeripheral+0x80>)
 8000676:	430b      	orrs	r3, r1
 8000678:	6013      	str	r3, [r2, #0]
 800067a:	bf00      	nop
}
 800067c:	bf00      	nop
 800067e:	370c      	adds	r7, #12
 8000680:	46bd      	mov	sp, r7
 8000682:	bc80      	pop	{r7}
 8000684:	4770      	bx	lr
 8000686:	bf00      	nop
 8000688:	40021014 	.word	0x40021014
 800068c:	4002101c 	.word	0x4002101c
 8000690:	40021018 	.word	0x40021018

08000694 <main>:


/***************************** main code Section *****************************/

int main()
{
 8000694:	b580      	push	{r7, lr}
 8000696:	af00      	add	r7, sp, #0
	MRCC_voidEnablePeripheral(RCC_GPIOAEnable);
 8000698:	2102      	movs	r1, #2
 800069a:	2003      	movs	r0, #3
 800069c:	f7ff ffb8 	bl	8000610 <MRCC_voidEnablePeripheral>
	MGPIO_voidSetPinDirection(MGPIO_GPIOA, MGPIO_PIN0, MGPIO_AF_PP_2MHZ);
 80006a0:	220a      	movs	r2, #10
 80006a2:	2100      	movs	r1, #0
 80006a4:	2000      	movs	r0, #0
 80006a6:	f7ff fd63 	bl	8000170 <MGPIO_voidSetPinDirection>
	MGPIO_voidSetPinDirection(MGPIO_GPIOA, MGPIO_PIN1, MGPIO_AF_PP_2MHZ);
 80006aa:	220a      	movs	r2, #10
 80006ac:	2101      	movs	r1, #1
 80006ae:	2000      	movs	r0, #0
 80006b0:	f7ff fd5e 	bl	8000170 <MGPIO_voidSetPinDirection>
	MGPIO_voidSetPinDirection(MGPIO_GPIOA, MGPIO_PIN2, MGPIO_AF_PP_2MHZ);
 80006b4:	220a      	movs	r2, #10
 80006b6:	2102      	movs	r1, #2
 80006b8:	2000      	movs	r0, #0
 80006ba:	f7ff fd59 	bl	8000170 <MGPIO_voidSetPinDirection>

	MNVIC_voidEnableInterrupt(6);
 80006be:	2006      	movs	r0, #6
 80006c0:	f7ff ff2e 	bl	8000520 <MNVIC_voidEnableInterrupt>
	MNVIC_voidSetPindingFlag(6);
 80006c4:	2006      	movs	r0, #6
 80006c6:	f7ff ff67 	bl	8000598 <MNVIC_voidSetPindingFlag>
    while(1)
 80006ca:	bf00      	nop
 80006cc:	e7fd      	b.n	80006ca <main+0x36>

080006ce <EXTI0_IRQHandler>:
    }
    return 0;
}

void EXTI0_IRQHandler()
{
 80006ce:	b580      	push	{r7, lr}
 80006d0:	af00      	add	r7, sp, #0
	MGPIO_voidSetPinValue(MGPIO_GPIOA, MGPIO_PIN0, MGPIO_High);
 80006d2:	2201      	movs	r2, #1
 80006d4:	2100      	movs	r1, #0
 80006d6:	2000      	movs	r0, #0
 80006d8:	f7ff fe9e 	bl	8000418 <MGPIO_voidSetPinValue>
}
 80006dc:	bf00      	nop
 80006de:	bd80      	pop	{r7, pc}

080006e0 <EXTI1_IRQHandler>:

void EXTI1_IRQHandler()
{
 80006e0:	b480      	push	{r7}
 80006e2:	af00      	add	r7, sp, #0

}
 80006e4:	bf00      	nop
 80006e6:	46bd      	mov	sp, r7
 80006e8:	bc80      	pop	{r7}
 80006ea:	4770      	bx	lr

080006ec <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80006ec:	480d      	ldr	r0, [pc, #52]	@ (8000724 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80006ee:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80006f0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80006f4:	480c      	ldr	r0, [pc, #48]	@ (8000728 <LoopForever+0x6>)
  ldr r1, =_edata
 80006f6:	490d      	ldr	r1, [pc, #52]	@ (800072c <LoopForever+0xa>)
  ldr r2, =_sidata
 80006f8:	4a0d      	ldr	r2, [pc, #52]	@ (8000730 <LoopForever+0xe>)
  movs r3, #0
 80006fa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80006fc:	e002      	b.n	8000704 <LoopCopyDataInit>

080006fe <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80006fe:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000700:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000702:	3304      	adds	r3, #4

08000704 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000704:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000706:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000708:	d3f9      	bcc.n	80006fe <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800070a:	4a0a      	ldr	r2, [pc, #40]	@ (8000734 <LoopForever+0x12>)
  ldr r4, =_ebss
 800070c:	4c0a      	ldr	r4, [pc, #40]	@ (8000738 <LoopForever+0x16>)
  movs r3, #0
 800070e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000710:	e001      	b.n	8000716 <LoopFillZerobss>

08000712 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000712:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000714:	3204      	adds	r2, #4

08000716 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000716:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000718:	d3fb      	bcc.n	8000712 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800071a:	f000 f811 	bl	8000740 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800071e:	f7ff ffb9 	bl	8000694 <main>

08000722 <LoopForever>:

LoopForever:
  b LoopForever
 8000722:	e7fe      	b.n	8000722 <LoopForever>
  ldr   r0, =_estack
 8000724:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8000728:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800072c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000730:	080007a8 	.word	0x080007a8
  ldr r2, =_sbss
 8000734:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000738:	2000001c 	.word	0x2000001c

0800073c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800073c:	e7fe      	b.n	800073c <ADC1_2_IRQHandler>
	...

08000740 <__libc_init_array>:
 8000740:	b570      	push	{r4, r5, r6, lr}
 8000742:	2600      	movs	r6, #0
 8000744:	4d0c      	ldr	r5, [pc, #48]	@ (8000778 <__libc_init_array+0x38>)
 8000746:	4c0d      	ldr	r4, [pc, #52]	@ (800077c <__libc_init_array+0x3c>)
 8000748:	1b64      	subs	r4, r4, r5
 800074a:	10a4      	asrs	r4, r4, #2
 800074c:	42a6      	cmp	r6, r4
 800074e:	d109      	bne.n	8000764 <__libc_init_array+0x24>
 8000750:	f000 f81a 	bl	8000788 <_init>
 8000754:	2600      	movs	r6, #0
 8000756:	4d0a      	ldr	r5, [pc, #40]	@ (8000780 <__libc_init_array+0x40>)
 8000758:	4c0a      	ldr	r4, [pc, #40]	@ (8000784 <__libc_init_array+0x44>)
 800075a:	1b64      	subs	r4, r4, r5
 800075c:	10a4      	asrs	r4, r4, #2
 800075e:	42a6      	cmp	r6, r4
 8000760:	d105      	bne.n	800076e <__libc_init_array+0x2e>
 8000762:	bd70      	pop	{r4, r5, r6, pc}
 8000764:	f855 3b04 	ldr.w	r3, [r5], #4
 8000768:	4798      	blx	r3
 800076a:	3601      	adds	r6, #1
 800076c:	e7ee      	b.n	800074c <__libc_init_array+0xc>
 800076e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000772:	4798      	blx	r3
 8000774:	3601      	adds	r6, #1
 8000776:	e7f2      	b.n	800075e <__libc_init_array+0x1e>
 8000778:	080007a0 	.word	0x080007a0
 800077c:	080007a0 	.word	0x080007a0
 8000780:	080007a0 	.word	0x080007a0
 8000784:	080007a4 	.word	0x080007a4

08000788 <_init>:
 8000788:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800078a:	bf00      	nop
 800078c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800078e:	bc08      	pop	{r3}
 8000790:	469e      	mov	lr, r3
 8000792:	4770      	bx	lr

08000794 <_fini>:
 8000794:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000796:	bf00      	nop
 8000798:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800079a:	bc08      	pop	{r3}
 800079c:	469e      	mov	lr, r3
 800079e:	4770      	bx	lr
