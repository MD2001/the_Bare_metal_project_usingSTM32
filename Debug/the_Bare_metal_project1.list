
the_Bare_metal_project1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000012cc  08000130  08000130  00001130  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000004  080013fc  080013fc  000023fc  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001400  08001400  00003050  2**0
                  CONTENTS
  4 .ARM          00000000  08001400  08001400  00003050  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001400  08001400  00003050  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001400  08001400  00002400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001404  08001404  00002404  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000050  20000000  08001408  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000158  20000050  08001458  00003050  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001a8  08001458  000031a8  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00003050  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000545  00000000  00000000  00003079  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000323  00000000  00000000  000035be  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000100  00000000  00000000  000038e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000ae  00000000  00000000  000039e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001002  00000000  00000000  00003a96  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000bff  00000000  00000000  00004a98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00007b9d  00000000  00000000  00005697  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000d234  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000690  00000000  00000000  0000d278  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004a  00000000  00000000  0000d908  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	@ (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	@ (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	@ (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000050 	.word	0x20000050
 800014c:	00000000 	.word	0x00000000
 8000150:	080013e4 	.word	0x080013e4

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	@ (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	@ (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	@ (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000054 	.word	0x20000054
 800016c:	080013e4 	.word	0x080013e4

08000170 <__aeabi_drsub>:
 8000170:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000174:	e002      	b.n	800017c <__adddf3>
 8000176:	bf00      	nop

08000178 <__aeabi_dsub>:
 8000178:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800017c <__adddf3>:
 800017c:	b530      	push	{r4, r5, lr}
 800017e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000182:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000186:	ea94 0f05 	teq	r4, r5
 800018a:	bf08      	it	eq
 800018c:	ea90 0f02 	teqeq	r0, r2
 8000190:	bf1f      	itttt	ne
 8000192:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000196:	ea55 0c02 	orrsne.w	ip, r5, r2
 800019a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800019e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80001a2:	f000 80e2 	beq.w	800036a <__adddf3+0x1ee>
 80001a6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80001aa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80001ae:	bfb8      	it	lt
 80001b0:	426d      	neglt	r5, r5
 80001b2:	dd0c      	ble.n	80001ce <__adddf3+0x52>
 80001b4:	442c      	add	r4, r5
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	ea82 0000 	eor.w	r0, r2, r0
 80001c2:	ea83 0101 	eor.w	r1, r3, r1
 80001c6:	ea80 0202 	eor.w	r2, r0, r2
 80001ca:	ea81 0303 	eor.w	r3, r1, r3
 80001ce:	2d36      	cmp	r5, #54	@ 0x36
 80001d0:	bf88      	it	hi
 80001d2:	bd30      	pophi	{r4, r5, pc}
 80001d4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80001d8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001dc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80001e0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001e4:	d002      	beq.n	80001ec <__adddf3+0x70>
 80001e6:	4240      	negs	r0, r0
 80001e8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001ec:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80001f0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001f4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001f8:	d002      	beq.n	8000200 <__adddf3+0x84>
 80001fa:	4252      	negs	r2, r2
 80001fc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000200:	ea94 0f05 	teq	r4, r5
 8000204:	f000 80a7 	beq.w	8000356 <__adddf3+0x1da>
 8000208:	f1a4 0401 	sub.w	r4, r4, #1
 800020c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000210:	db0d      	blt.n	800022e <__adddf3+0xb2>
 8000212:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000216:	fa22 f205 	lsr.w	r2, r2, r5
 800021a:	1880      	adds	r0, r0, r2
 800021c:	f141 0100 	adc.w	r1, r1, #0
 8000220:	fa03 f20e 	lsl.w	r2, r3, lr
 8000224:	1880      	adds	r0, r0, r2
 8000226:	fa43 f305 	asr.w	r3, r3, r5
 800022a:	4159      	adcs	r1, r3
 800022c:	e00e      	b.n	800024c <__adddf3+0xd0>
 800022e:	f1a5 0520 	sub.w	r5, r5, #32
 8000232:	f10e 0e20 	add.w	lr, lr, #32
 8000236:	2a01      	cmp	r2, #1
 8000238:	fa03 fc0e 	lsl.w	ip, r3, lr
 800023c:	bf28      	it	cs
 800023e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000242:	fa43 f305 	asr.w	r3, r3, r5
 8000246:	18c0      	adds	r0, r0, r3
 8000248:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800024c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000250:	d507      	bpl.n	8000262 <__adddf3+0xe6>
 8000252:	f04f 0e00 	mov.w	lr, #0
 8000256:	f1dc 0c00 	rsbs	ip, ip, #0
 800025a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800025e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000262:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000266:	d31b      	bcc.n	80002a0 <__adddf3+0x124>
 8000268:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800026c:	d30c      	bcc.n	8000288 <__adddf3+0x10c>
 800026e:	0849      	lsrs	r1, r1, #1
 8000270:	ea5f 0030 	movs.w	r0, r0, rrx
 8000274:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000278:	f104 0401 	add.w	r4, r4, #1
 800027c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000280:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000284:	f080 809a 	bcs.w	80003bc <__adddf3+0x240>
 8000288:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800028c:	bf08      	it	eq
 800028e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000292:	f150 0000 	adcs.w	r0, r0, #0
 8000296:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800029a:	ea41 0105 	orr.w	r1, r1, r5
 800029e:	bd30      	pop	{r4, r5, pc}
 80002a0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80002a4:	4140      	adcs	r0, r0
 80002a6:	eb41 0101 	adc.w	r1, r1, r1
 80002aa:	3c01      	subs	r4, #1
 80002ac:	bf28      	it	cs
 80002ae:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80002b2:	d2e9      	bcs.n	8000288 <__adddf3+0x10c>
 80002b4:	f091 0f00 	teq	r1, #0
 80002b8:	bf04      	itt	eq
 80002ba:	4601      	moveq	r1, r0
 80002bc:	2000      	moveq	r0, #0
 80002be:	fab1 f381 	clz	r3, r1
 80002c2:	bf08      	it	eq
 80002c4:	3320      	addeq	r3, #32
 80002c6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ca:	f1b3 0220 	subs.w	r2, r3, #32
 80002ce:	da0c      	bge.n	80002ea <__adddf3+0x16e>
 80002d0:	320c      	adds	r2, #12
 80002d2:	dd08      	ble.n	80002e6 <__adddf3+0x16a>
 80002d4:	f102 0c14 	add.w	ip, r2, #20
 80002d8:	f1c2 020c 	rsb	r2, r2, #12
 80002dc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002e0:	fa21 f102 	lsr.w	r1, r1, r2
 80002e4:	e00c      	b.n	8000300 <__adddf3+0x184>
 80002e6:	f102 0214 	add.w	r2, r2, #20
 80002ea:	bfd8      	it	le
 80002ec:	f1c2 0c20 	rsble	ip, r2, #32
 80002f0:	fa01 f102 	lsl.w	r1, r1, r2
 80002f4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002f8:	bfdc      	itt	le
 80002fa:	ea41 010c 	orrle.w	r1, r1, ip
 80002fe:	4090      	lslle	r0, r2
 8000300:	1ae4      	subs	r4, r4, r3
 8000302:	bfa2      	ittt	ge
 8000304:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000308:	4329      	orrge	r1, r5
 800030a:	bd30      	popge	{r4, r5, pc}
 800030c:	ea6f 0404 	mvn.w	r4, r4
 8000310:	3c1f      	subs	r4, #31
 8000312:	da1c      	bge.n	800034e <__adddf3+0x1d2>
 8000314:	340c      	adds	r4, #12
 8000316:	dc0e      	bgt.n	8000336 <__adddf3+0x1ba>
 8000318:	f104 0414 	add.w	r4, r4, #20
 800031c:	f1c4 0220 	rsb	r2, r4, #32
 8000320:	fa20 f004 	lsr.w	r0, r0, r4
 8000324:	fa01 f302 	lsl.w	r3, r1, r2
 8000328:	ea40 0003 	orr.w	r0, r0, r3
 800032c:	fa21 f304 	lsr.w	r3, r1, r4
 8000330:	ea45 0103 	orr.w	r1, r5, r3
 8000334:	bd30      	pop	{r4, r5, pc}
 8000336:	f1c4 040c 	rsb	r4, r4, #12
 800033a:	f1c4 0220 	rsb	r2, r4, #32
 800033e:	fa20 f002 	lsr.w	r0, r0, r2
 8000342:	fa01 f304 	lsl.w	r3, r1, r4
 8000346:	ea40 0003 	orr.w	r0, r0, r3
 800034a:	4629      	mov	r1, r5
 800034c:	bd30      	pop	{r4, r5, pc}
 800034e:	fa21 f004 	lsr.w	r0, r1, r4
 8000352:	4629      	mov	r1, r5
 8000354:	bd30      	pop	{r4, r5, pc}
 8000356:	f094 0f00 	teq	r4, #0
 800035a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800035e:	bf06      	itte	eq
 8000360:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000364:	3401      	addeq	r4, #1
 8000366:	3d01      	subne	r5, #1
 8000368:	e74e      	b.n	8000208 <__adddf3+0x8c>
 800036a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800036e:	bf18      	it	ne
 8000370:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000374:	d029      	beq.n	80003ca <__adddf3+0x24e>
 8000376:	ea94 0f05 	teq	r4, r5
 800037a:	bf08      	it	eq
 800037c:	ea90 0f02 	teqeq	r0, r2
 8000380:	d005      	beq.n	800038e <__adddf3+0x212>
 8000382:	ea54 0c00 	orrs.w	ip, r4, r0
 8000386:	bf04      	itt	eq
 8000388:	4619      	moveq	r1, r3
 800038a:	4610      	moveq	r0, r2
 800038c:	bd30      	pop	{r4, r5, pc}
 800038e:	ea91 0f03 	teq	r1, r3
 8000392:	bf1e      	ittt	ne
 8000394:	2100      	movne	r1, #0
 8000396:	2000      	movne	r0, #0
 8000398:	bd30      	popne	{r4, r5, pc}
 800039a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800039e:	d105      	bne.n	80003ac <__adddf3+0x230>
 80003a0:	0040      	lsls	r0, r0, #1
 80003a2:	4149      	adcs	r1, r1
 80003a4:	bf28      	it	cs
 80003a6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80003aa:	bd30      	pop	{r4, r5, pc}
 80003ac:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80003b0:	bf3c      	itt	cc
 80003b2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80003b6:	bd30      	popcc	{r4, r5, pc}
 80003b8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003bc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80003c0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80003c4:	f04f 0000 	mov.w	r0, #0
 80003c8:	bd30      	pop	{r4, r5, pc}
 80003ca:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003ce:	bf1a      	itte	ne
 80003d0:	4619      	movne	r1, r3
 80003d2:	4610      	movne	r0, r2
 80003d4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003d8:	bf1c      	itt	ne
 80003da:	460b      	movne	r3, r1
 80003dc:	4602      	movne	r2, r0
 80003de:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003e2:	bf06      	itte	eq
 80003e4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003e8:	ea91 0f03 	teqeq	r1, r3
 80003ec:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80003f0:	bd30      	pop	{r4, r5, pc}
 80003f2:	bf00      	nop

080003f4 <__aeabi_ui2d>:
 80003f4:	f090 0f00 	teq	r0, #0
 80003f8:	bf04      	itt	eq
 80003fa:	2100      	moveq	r1, #0
 80003fc:	4770      	bxeq	lr
 80003fe:	b530      	push	{r4, r5, lr}
 8000400:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000404:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000408:	f04f 0500 	mov.w	r5, #0
 800040c:	f04f 0100 	mov.w	r1, #0
 8000410:	e750      	b.n	80002b4 <__adddf3+0x138>
 8000412:	bf00      	nop

08000414 <__aeabi_i2d>:
 8000414:	f090 0f00 	teq	r0, #0
 8000418:	bf04      	itt	eq
 800041a:	2100      	moveq	r1, #0
 800041c:	4770      	bxeq	lr
 800041e:	b530      	push	{r4, r5, lr}
 8000420:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000424:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000428:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800042c:	bf48      	it	mi
 800042e:	4240      	negmi	r0, r0
 8000430:	f04f 0100 	mov.w	r1, #0
 8000434:	e73e      	b.n	80002b4 <__adddf3+0x138>
 8000436:	bf00      	nop

08000438 <__aeabi_f2d>:
 8000438:	0042      	lsls	r2, r0, #1
 800043a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800043e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000442:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000446:	bf1f      	itttt	ne
 8000448:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800044c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000450:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000454:	4770      	bxne	lr
 8000456:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800045a:	bf08      	it	eq
 800045c:	4770      	bxeq	lr
 800045e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000462:	bf04      	itt	eq
 8000464:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000468:	4770      	bxeq	lr
 800046a:	b530      	push	{r4, r5, lr}
 800046c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000470:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000474:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000478:	e71c      	b.n	80002b4 <__adddf3+0x138>
 800047a:	bf00      	nop

0800047c <__aeabi_ul2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f04f 0500 	mov.w	r5, #0
 800048a:	e00a      	b.n	80004a2 <__aeabi_l2d+0x16>

0800048c <__aeabi_l2d>:
 800048c:	ea50 0201 	orrs.w	r2, r0, r1
 8000490:	bf08      	it	eq
 8000492:	4770      	bxeq	lr
 8000494:	b530      	push	{r4, r5, lr}
 8000496:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800049a:	d502      	bpl.n	80004a2 <__aeabi_l2d+0x16>
 800049c:	4240      	negs	r0, r0
 800049e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004a2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80004a6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004aa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80004ae:	f43f aed8 	beq.w	8000262 <__adddf3+0xe6>
 80004b2:	f04f 0203 	mov.w	r2, #3
 80004b6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004ba:	bf18      	it	ne
 80004bc:	3203      	addne	r2, #3
 80004be:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004c2:	bf18      	it	ne
 80004c4:	3203      	addne	r2, #3
 80004c6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ca:	f1c2 0320 	rsb	r3, r2, #32
 80004ce:	fa00 fc03 	lsl.w	ip, r0, r3
 80004d2:	fa20 f002 	lsr.w	r0, r0, r2
 80004d6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004da:	ea40 000e 	orr.w	r0, r0, lr
 80004de:	fa21 f102 	lsr.w	r1, r1, r2
 80004e2:	4414      	add	r4, r2
 80004e4:	e6bd      	b.n	8000262 <__adddf3+0xe6>
 80004e6:	bf00      	nop

080004e8 <__aeabi_dmul>:
 80004e8:	b570      	push	{r4, r5, r6, lr}
 80004ea:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80004ee:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80004f2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004f6:	bf1d      	ittte	ne
 80004f8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004fc:	ea94 0f0c 	teqne	r4, ip
 8000500:	ea95 0f0c 	teqne	r5, ip
 8000504:	f000 f8de 	bleq	80006c4 <__aeabi_dmul+0x1dc>
 8000508:	442c      	add	r4, r5
 800050a:	ea81 0603 	eor.w	r6, r1, r3
 800050e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000512:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000516:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800051a:	bf18      	it	ne
 800051c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000520:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000524:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000528:	d038      	beq.n	800059c <__aeabi_dmul+0xb4>
 800052a:	fba0 ce02 	umull	ip, lr, r0, r2
 800052e:	f04f 0500 	mov.w	r5, #0
 8000532:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000536:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800053a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800053e:	f04f 0600 	mov.w	r6, #0
 8000542:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000546:	f09c 0f00 	teq	ip, #0
 800054a:	bf18      	it	ne
 800054c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000550:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000554:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000558:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800055c:	d204      	bcs.n	8000568 <__aeabi_dmul+0x80>
 800055e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000562:	416d      	adcs	r5, r5
 8000564:	eb46 0606 	adc.w	r6, r6, r6
 8000568:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800056c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000570:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000574:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000578:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800057c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000580:	bf88      	it	hi
 8000582:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000586:	d81e      	bhi.n	80005c6 <__aeabi_dmul+0xde>
 8000588:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800058c:	bf08      	it	eq
 800058e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000592:	f150 0000 	adcs.w	r0, r0, #0
 8000596:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800059a:	bd70      	pop	{r4, r5, r6, pc}
 800059c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80005a0:	ea46 0101 	orr.w	r1, r6, r1
 80005a4:	ea40 0002 	orr.w	r0, r0, r2
 80005a8:	ea81 0103 	eor.w	r1, r1, r3
 80005ac:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005b0:	bfc2      	ittt	gt
 80005b2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005b6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005ba:	bd70      	popgt	{r4, r5, r6, pc}
 80005bc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005c0:	f04f 0e00 	mov.w	lr, #0
 80005c4:	3c01      	subs	r4, #1
 80005c6:	f300 80ab 	bgt.w	8000720 <__aeabi_dmul+0x238>
 80005ca:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80005ce:	bfde      	ittt	le
 80005d0:	2000      	movle	r0, #0
 80005d2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80005d6:	bd70      	pople	{r4, r5, r6, pc}
 80005d8:	f1c4 0400 	rsb	r4, r4, #0
 80005dc:	3c20      	subs	r4, #32
 80005de:	da35      	bge.n	800064c <__aeabi_dmul+0x164>
 80005e0:	340c      	adds	r4, #12
 80005e2:	dc1b      	bgt.n	800061c <__aeabi_dmul+0x134>
 80005e4:	f104 0414 	add.w	r4, r4, #20
 80005e8:	f1c4 0520 	rsb	r5, r4, #32
 80005ec:	fa00 f305 	lsl.w	r3, r0, r5
 80005f0:	fa20 f004 	lsr.w	r0, r0, r4
 80005f4:	fa01 f205 	lsl.w	r2, r1, r5
 80005f8:	ea40 0002 	orr.w	r0, r0, r2
 80005fc:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000600:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000604:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000608:	fa21 f604 	lsr.w	r6, r1, r4
 800060c:	eb42 0106 	adc.w	r1, r2, r6
 8000610:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000614:	bf08      	it	eq
 8000616:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800061a:	bd70      	pop	{r4, r5, r6, pc}
 800061c:	f1c4 040c 	rsb	r4, r4, #12
 8000620:	f1c4 0520 	rsb	r5, r4, #32
 8000624:	fa00 f304 	lsl.w	r3, r0, r4
 8000628:	fa20 f005 	lsr.w	r0, r0, r5
 800062c:	fa01 f204 	lsl.w	r2, r1, r4
 8000630:	ea40 0002 	orr.w	r0, r0, r2
 8000634:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000638:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800063c:	f141 0100 	adc.w	r1, r1, #0
 8000640:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000644:	bf08      	it	eq
 8000646:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800064a:	bd70      	pop	{r4, r5, r6, pc}
 800064c:	f1c4 0520 	rsb	r5, r4, #32
 8000650:	fa00 f205 	lsl.w	r2, r0, r5
 8000654:	ea4e 0e02 	orr.w	lr, lr, r2
 8000658:	fa20 f304 	lsr.w	r3, r0, r4
 800065c:	fa01 f205 	lsl.w	r2, r1, r5
 8000660:	ea43 0302 	orr.w	r3, r3, r2
 8000664:	fa21 f004 	lsr.w	r0, r1, r4
 8000668:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800066c:	fa21 f204 	lsr.w	r2, r1, r4
 8000670:	ea20 0002 	bic.w	r0, r0, r2
 8000674:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000678:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800067c:	bf08      	it	eq
 800067e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000682:	bd70      	pop	{r4, r5, r6, pc}
 8000684:	f094 0f00 	teq	r4, #0
 8000688:	d10f      	bne.n	80006aa <__aeabi_dmul+0x1c2>
 800068a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800068e:	0040      	lsls	r0, r0, #1
 8000690:	eb41 0101 	adc.w	r1, r1, r1
 8000694:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000698:	bf08      	it	eq
 800069a:	3c01      	subeq	r4, #1
 800069c:	d0f7      	beq.n	800068e <__aeabi_dmul+0x1a6>
 800069e:	ea41 0106 	orr.w	r1, r1, r6
 80006a2:	f095 0f00 	teq	r5, #0
 80006a6:	bf18      	it	ne
 80006a8:	4770      	bxne	lr
 80006aa:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80006ae:	0052      	lsls	r2, r2, #1
 80006b0:	eb43 0303 	adc.w	r3, r3, r3
 80006b4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80006b8:	bf08      	it	eq
 80006ba:	3d01      	subeq	r5, #1
 80006bc:	d0f7      	beq.n	80006ae <__aeabi_dmul+0x1c6>
 80006be:	ea43 0306 	orr.w	r3, r3, r6
 80006c2:	4770      	bx	lr
 80006c4:	ea94 0f0c 	teq	r4, ip
 80006c8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006cc:	bf18      	it	ne
 80006ce:	ea95 0f0c 	teqne	r5, ip
 80006d2:	d00c      	beq.n	80006ee <__aeabi_dmul+0x206>
 80006d4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006d8:	bf18      	it	ne
 80006da:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006de:	d1d1      	bne.n	8000684 <__aeabi_dmul+0x19c>
 80006e0:	ea81 0103 	eor.w	r1, r1, r3
 80006e4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006e8:	f04f 0000 	mov.w	r0, #0
 80006ec:	bd70      	pop	{r4, r5, r6, pc}
 80006ee:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006f2:	bf06      	itte	eq
 80006f4:	4610      	moveq	r0, r2
 80006f6:	4619      	moveq	r1, r3
 80006f8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006fc:	d019      	beq.n	8000732 <__aeabi_dmul+0x24a>
 80006fe:	ea94 0f0c 	teq	r4, ip
 8000702:	d102      	bne.n	800070a <__aeabi_dmul+0x222>
 8000704:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000708:	d113      	bne.n	8000732 <__aeabi_dmul+0x24a>
 800070a:	ea95 0f0c 	teq	r5, ip
 800070e:	d105      	bne.n	800071c <__aeabi_dmul+0x234>
 8000710:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000714:	bf1c      	itt	ne
 8000716:	4610      	movne	r0, r2
 8000718:	4619      	movne	r1, r3
 800071a:	d10a      	bne.n	8000732 <__aeabi_dmul+0x24a>
 800071c:	ea81 0103 	eor.w	r1, r1, r3
 8000720:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000724:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000728:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800072c:	f04f 0000 	mov.w	r0, #0
 8000730:	bd70      	pop	{r4, r5, r6, pc}
 8000732:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000736:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800073a:	bd70      	pop	{r4, r5, r6, pc}

0800073c <__aeabi_ddiv>:
 800073c:	b570      	push	{r4, r5, r6, lr}
 800073e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000742:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000746:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800074a:	bf1d      	ittte	ne
 800074c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000750:	ea94 0f0c 	teqne	r4, ip
 8000754:	ea95 0f0c 	teqne	r5, ip
 8000758:	f000 f8a7 	bleq	80008aa <__aeabi_ddiv+0x16e>
 800075c:	eba4 0405 	sub.w	r4, r4, r5
 8000760:	ea81 0e03 	eor.w	lr, r1, r3
 8000764:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000768:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800076c:	f000 8088 	beq.w	8000880 <__aeabi_ddiv+0x144>
 8000770:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000774:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000778:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800077c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000780:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000784:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000788:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800078c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000790:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000794:	429d      	cmp	r5, r3
 8000796:	bf08      	it	eq
 8000798:	4296      	cmpeq	r6, r2
 800079a:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 800079e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80007a2:	d202      	bcs.n	80007aa <__aeabi_ddiv+0x6e>
 80007a4:	085b      	lsrs	r3, r3, #1
 80007a6:	ea4f 0232 	mov.w	r2, r2, rrx
 80007aa:	1ab6      	subs	r6, r6, r2
 80007ac:	eb65 0503 	sbc.w	r5, r5, r3
 80007b0:	085b      	lsrs	r3, r3, #1
 80007b2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007b6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80007ba:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80007be:	ebb6 0e02 	subs.w	lr, r6, r2
 80007c2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007c6:	bf22      	ittt	cs
 80007c8:	1ab6      	subcs	r6, r6, r2
 80007ca:	4675      	movcs	r5, lr
 80007cc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007d0:	085b      	lsrs	r3, r3, #1
 80007d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007d6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007da:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007de:	bf22      	ittt	cs
 80007e0:	1ab6      	subcs	r6, r6, r2
 80007e2:	4675      	movcs	r5, lr
 80007e4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007e8:	085b      	lsrs	r3, r3, #1
 80007ea:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80007f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007f6:	bf22      	ittt	cs
 80007f8:	1ab6      	subcs	r6, r6, r2
 80007fa:	4675      	movcs	r5, lr
 80007fc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000800:	085b      	lsrs	r3, r3, #1
 8000802:	ea4f 0232 	mov.w	r2, r2, rrx
 8000806:	ebb6 0e02 	subs.w	lr, r6, r2
 800080a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800080e:	bf22      	ittt	cs
 8000810:	1ab6      	subcs	r6, r6, r2
 8000812:	4675      	movcs	r5, lr
 8000814:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000818:	ea55 0e06 	orrs.w	lr, r5, r6
 800081c:	d018      	beq.n	8000850 <__aeabi_ddiv+0x114>
 800081e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000822:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000826:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800082a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800082e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000832:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000836:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800083a:	d1c0      	bne.n	80007be <__aeabi_ddiv+0x82>
 800083c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000840:	d10b      	bne.n	800085a <__aeabi_ddiv+0x11e>
 8000842:	ea41 0100 	orr.w	r1, r1, r0
 8000846:	f04f 0000 	mov.w	r0, #0
 800084a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800084e:	e7b6      	b.n	80007be <__aeabi_ddiv+0x82>
 8000850:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000854:	bf04      	itt	eq
 8000856:	4301      	orreq	r1, r0
 8000858:	2000      	moveq	r0, #0
 800085a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800085e:	bf88      	it	hi
 8000860:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000864:	f63f aeaf 	bhi.w	80005c6 <__aeabi_dmul+0xde>
 8000868:	ebb5 0c03 	subs.w	ip, r5, r3
 800086c:	bf04      	itt	eq
 800086e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000872:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000876:	f150 0000 	adcs.w	r0, r0, #0
 800087a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800087e:	bd70      	pop	{r4, r5, r6, pc}
 8000880:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000884:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000888:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800088c:	bfc2      	ittt	gt
 800088e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000892:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000896:	bd70      	popgt	{r4, r5, r6, pc}
 8000898:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800089c:	f04f 0e00 	mov.w	lr, #0
 80008a0:	3c01      	subs	r4, #1
 80008a2:	e690      	b.n	80005c6 <__aeabi_dmul+0xde>
 80008a4:	ea45 0e06 	orr.w	lr, r5, r6
 80008a8:	e68d      	b.n	80005c6 <__aeabi_dmul+0xde>
 80008aa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008ae:	ea94 0f0c 	teq	r4, ip
 80008b2:	bf08      	it	eq
 80008b4:	ea95 0f0c 	teqeq	r5, ip
 80008b8:	f43f af3b 	beq.w	8000732 <__aeabi_dmul+0x24a>
 80008bc:	ea94 0f0c 	teq	r4, ip
 80008c0:	d10a      	bne.n	80008d8 <__aeabi_ddiv+0x19c>
 80008c2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008c6:	f47f af34 	bne.w	8000732 <__aeabi_dmul+0x24a>
 80008ca:	ea95 0f0c 	teq	r5, ip
 80008ce:	f47f af25 	bne.w	800071c <__aeabi_dmul+0x234>
 80008d2:	4610      	mov	r0, r2
 80008d4:	4619      	mov	r1, r3
 80008d6:	e72c      	b.n	8000732 <__aeabi_dmul+0x24a>
 80008d8:	ea95 0f0c 	teq	r5, ip
 80008dc:	d106      	bne.n	80008ec <__aeabi_ddiv+0x1b0>
 80008de:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008e2:	f43f aefd 	beq.w	80006e0 <__aeabi_dmul+0x1f8>
 80008e6:	4610      	mov	r0, r2
 80008e8:	4619      	mov	r1, r3
 80008ea:	e722      	b.n	8000732 <__aeabi_dmul+0x24a>
 80008ec:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008f0:	bf18      	it	ne
 80008f2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008f6:	f47f aec5 	bne.w	8000684 <__aeabi_dmul+0x19c>
 80008fa:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008fe:	f47f af0d 	bne.w	800071c <__aeabi_dmul+0x234>
 8000902:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000906:	f47f aeeb 	bne.w	80006e0 <__aeabi_dmul+0x1f8>
 800090a:	e712      	b.n	8000732 <__aeabi_dmul+0x24a>

0800090c <__gedf2>:
 800090c:	f04f 3cff 	mov.w	ip, #4294967295
 8000910:	e006      	b.n	8000920 <__cmpdf2+0x4>
 8000912:	bf00      	nop

08000914 <__ledf2>:
 8000914:	f04f 0c01 	mov.w	ip, #1
 8000918:	e002      	b.n	8000920 <__cmpdf2+0x4>
 800091a:	bf00      	nop

0800091c <__cmpdf2>:
 800091c:	f04f 0c01 	mov.w	ip, #1
 8000920:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000924:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000928:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800092c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000930:	bf18      	it	ne
 8000932:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000936:	d01b      	beq.n	8000970 <__cmpdf2+0x54>
 8000938:	b001      	add	sp, #4
 800093a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800093e:	bf0c      	ite	eq
 8000940:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000944:	ea91 0f03 	teqne	r1, r3
 8000948:	bf02      	ittt	eq
 800094a:	ea90 0f02 	teqeq	r0, r2
 800094e:	2000      	moveq	r0, #0
 8000950:	4770      	bxeq	lr
 8000952:	f110 0f00 	cmn.w	r0, #0
 8000956:	ea91 0f03 	teq	r1, r3
 800095a:	bf58      	it	pl
 800095c:	4299      	cmppl	r1, r3
 800095e:	bf08      	it	eq
 8000960:	4290      	cmpeq	r0, r2
 8000962:	bf2c      	ite	cs
 8000964:	17d8      	asrcs	r0, r3, #31
 8000966:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800096a:	f040 0001 	orr.w	r0, r0, #1
 800096e:	4770      	bx	lr
 8000970:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d102      	bne.n	8000980 <__cmpdf2+0x64>
 800097a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800097e:	d107      	bne.n	8000990 <__cmpdf2+0x74>
 8000980:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000984:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000988:	d1d6      	bne.n	8000938 <__cmpdf2+0x1c>
 800098a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800098e:	d0d3      	beq.n	8000938 <__cmpdf2+0x1c>
 8000990:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000994:	4770      	bx	lr
 8000996:	bf00      	nop

08000998 <__aeabi_cdrcmple>:
 8000998:	4684      	mov	ip, r0
 800099a:	4610      	mov	r0, r2
 800099c:	4662      	mov	r2, ip
 800099e:	468c      	mov	ip, r1
 80009a0:	4619      	mov	r1, r3
 80009a2:	4663      	mov	r3, ip
 80009a4:	e000      	b.n	80009a8 <__aeabi_cdcmpeq>
 80009a6:	bf00      	nop

080009a8 <__aeabi_cdcmpeq>:
 80009a8:	b501      	push	{r0, lr}
 80009aa:	f7ff ffb7 	bl	800091c <__cmpdf2>
 80009ae:	2800      	cmp	r0, #0
 80009b0:	bf48      	it	mi
 80009b2:	f110 0f00 	cmnmi.w	r0, #0
 80009b6:	bd01      	pop	{r0, pc}

080009b8 <__aeabi_dcmpeq>:
 80009b8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009bc:	f7ff fff4 	bl	80009a8 <__aeabi_cdcmpeq>
 80009c0:	bf0c      	ite	eq
 80009c2:	2001      	moveq	r0, #1
 80009c4:	2000      	movne	r0, #0
 80009c6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ca:	bf00      	nop

080009cc <__aeabi_dcmplt>:
 80009cc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d0:	f7ff ffea 	bl	80009a8 <__aeabi_cdcmpeq>
 80009d4:	bf34      	ite	cc
 80009d6:	2001      	movcc	r0, #1
 80009d8:	2000      	movcs	r0, #0
 80009da:	f85d fb08 	ldr.w	pc, [sp], #8
 80009de:	bf00      	nop

080009e0 <__aeabi_dcmple>:
 80009e0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e4:	f7ff ffe0 	bl	80009a8 <__aeabi_cdcmpeq>
 80009e8:	bf94      	ite	ls
 80009ea:	2001      	movls	r0, #1
 80009ec:	2000      	movhi	r0, #0
 80009ee:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f2:	bf00      	nop

080009f4 <__aeabi_dcmpge>:
 80009f4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009f8:	f7ff ffce 	bl	8000998 <__aeabi_cdrcmple>
 80009fc:	bf94      	ite	ls
 80009fe:	2001      	movls	r0, #1
 8000a00:	2000      	movhi	r0, #0
 8000a02:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a06:	bf00      	nop

08000a08 <__aeabi_dcmpgt>:
 8000a08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a0c:	f7ff ffc4 	bl	8000998 <__aeabi_cdrcmple>
 8000a10:	bf34      	ite	cc
 8000a12:	2001      	movcc	r0, #1
 8000a14:	2000      	movcs	r0, #0
 8000a16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a1a:	bf00      	nop

08000a1c <__aeabi_dcmpun>:
 8000a1c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a24:	d102      	bne.n	8000a2c <__aeabi_dcmpun+0x10>
 8000a26:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a2a:	d10a      	bne.n	8000a42 <__aeabi_dcmpun+0x26>
 8000a2c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a34:	d102      	bne.n	8000a3c <__aeabi_dcmpun+0x20>
 8000a36:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a3a:	d102      	bne.n	8000a42 <__aeabi_dcmpun+0x26>
 8000a3c:	f04f 0000 	mov.w	r0, #0
 8000a40:	4770      	bx	lr
 8000a42:	f04f 0001 	mov.w	r0, #1
 8000a46:	4770      	bx	lr

08000a48 <__aeabi_d2uiz>:
 8000a48:	004a      	lsls	r2, r1, #1
 8000a4a:	d211      	bcs.n	8000a70 <__aeabi_d2uiz+0x28>
 8000a4c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000a50:	d211      	bcs.n	8000a76 <__aeabi_d2uiz+0x2e>
 8000a52:	d50d      	bpl.n	8000a70 <__aeabi_d2uiz+0x28>
 8000a54:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a58:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a5c:	d40e      	bmi.n	8000a7c <__aeabi_d2uiz+0x34>
 8000a5e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a62:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000a66:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a6a:	fa23 f002 	lsr.w	r0, r3, r2
 8000a6e:	4770      	bx	lr
 8000a70:	f04f 0000 	mov.w	r0, #0
 8000a74:	4770      	bx	lr
 8000a76:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a7a:	d102      	bne.n	8000a82 <__aeabi_d2uiz+0x3a>
 8000a7c:	f04f 30ff 	mov.w	r0, #4294967295
 8000a80:	4770      	bx	lr
 8000a82:	f04f 0000 	mov.w	r0, #0
 8000a86:	4770      	bx	lr

08000a88 <MEXTI_voidInit>:


static volatile void (*CALL_BACK_FUNC)(void);

void MEXTI_voidInit()
{
 8000a88:	b480      	push	{r7}
 8000a8a:	af00      	add	r7, sp, #0
    #if EXTI_MODE == RISING
        SET_BIT(EXTI->RTSR,EXTI_LINE);
    #elif EXTI_MODE == FALLING
        SET_BIT(EXTI->FTSR,EXTI_LINE);
 8000a8c:	4b04      	ldr	r3, [pc, #16]	@ (8000aa0 <MEXTI_voidInit+0x18>)
 8000a8e:	68db      	ldr	r3, [r3, #12]
 8000a90:	4a03      	ldr	r2, [pc, #12]	@ (8000aa0 <MEXTI_voidInit+0x18>)
 8000a92:	f043 0301 	orr.w	r3, r3, #1
 8000a96:	60d3      	str	r3, [r2, #12]
        SET_BIT(EXTI->RTSR,EXTI_LINE);
        SET_BIT(EXTI->FTSR,EXTI_LINE);
    #else 
        #error "you choise wrong mode"
    #endif
}
 8000a98:	bf00      	nop
 8000a9a:	46bd      	mov	sp, r7
 8000a9c:	bc80      	pop	{r7}
 8000a9e:	4770      	bx	lr
 8000aa0:	40010400 	.word	0x40010400

08000aa4 <MEXTI_voidSetCallBack>:
                    SET_BIT(EXTI->FTSR,Copy_u8line); break;
    }
}

void MEXTI_voidSetCallBack(void(*ptf)(void))
{
 8000aa4:	b480      	push	{r7}
 8000aa6:	b083      	sub	sp, #12
 8000aa8:	af00      	add	r7, sp, #0
 8000aaa:	6078      	str	r0, [r7, #4]
	CALL_BACK_FUNC=ptf;
 8000aac:	4a03      	ldr	r2, [pc, #12]	@ (8000abc <MEXTI_voidSetCallBack+0x18>)
 8000aae:	687b      	ldr	r3, [r7, #4]
 8000ab0:	6013      	str	r3, [r2, #0]
}
 8000ab2:	bf00      	nop
 8000ab4:	370c      	adds	r7, #12
 8000ab6:	46bd      	mov	sp, r7
 8000ab8:	bc80      	pop	{r7}
 8000aba:	4770      	bx	lr
 8000abc:	2000006c 	.word	0x2000006c

08000ac0 <EXTI0_IRQHandler>:

void EXTI0_IRQHandler()
{
 8000ac0:	b580      	push	{r7, lr}
 8000ac2:	af00      	add	r7, sp, #0
	CALL_BACK_FUNC();
 8000ac4:	4b02      	ldr	r3, [pc, #8]	@ (8000ad0 <EXTI0_IRQHandler+0x10>)
 8000ac6:	681b      	ldr	r3, [r3, #0]
 8000ac8:	4798      	blx	r3

}
 8000aca:	bf00      	nop
 8000acc:	bd80      	pop	{r7, pc}
 8000ace:	bf00      	nop
 8000ad0:	2000006c 	.word	0x2000006c

08000ad4 <MGPIO_voidSetPinDirection>:
#include "GPIO_privet.h"
#include "GPIO_config.h"

/***************************** Code Section *********************************/
void MGPIO_voidSetPinDirection(u8 Copy_Port,u8 Copy_Pin,u8 Copy_Mode)
{
 8000ad4:	b480      	push	{r7}
 8000ad6:	b083      	sub	sp, #12
 8000ad8:	af00      	add	r7, sp, #0
 8000ada:	4603      	mov	r3, r0
 8000adc:	71fb      	strb	r3, [r7, #7]
 8000ade:	460b      	mov	r3, r1
 8000ae0:	71bb      	strb	r3, [r7, #6]
 8000ae2:	4613      	mov	r3, r2
 8000ae4:	717b      	strb	r3, [r7, #5]
	if(Copy_Port<=2)
 8000ae6:	79fb      	ldrb	r3, [r7, #7]
 8000ae8:	2b02      	cmp	r3, #2
 8000aea:	f200 8131 	bhi.w	8000d50 <MGPIO_voidSetPinDirection+0x27c>
	{
		if(Copy_Pin<=16)
 8000aee:	79bb      	ldrb	r3, [r7, #6]
 8000af0:	2b10      	cmp	r3, #16
 8000af2:	f200 812d 	bhi.w	8000d50 <MGPIO_voidSetPinDirection+0x27c>
		{
			switch(Copy_Port)
 8000af6:	79fb      	ldrb	r3, [r7, #7]
 8000af8:	2b02      	cmp	r3, #2
 8000afa:	f000 80ed 	beq.w	8000cd8 <MGPIO_voidSetPinDirection+0x204>
 8000afe:	2b02      	cmp	r3, #2
 8000b00:	f300 8126 	bgt.w	8000d50 <MGPIO_voidSetPinDirection+0x27c>
 8000b04:	2b00      	cmp	r3, #0
 8000b06:	d002      	beq.n	8000b0e <MGPIO_voidSetPinDirection+0x3a>
 8000b08:	2b01      	cmp	r3, #1
 8000b0a:	d073      	beq.n	8000bf4 <MGPIO_voidSetPinDirection+0x120>
	}
	else
	{
		/*error*/
	}
}
 8000b0c:	e120      	b.n	8000d50 <MGPIO_voidSetPinDirection+0x27c>
									if(Copy_Pin <=7)
 8000b0e:	79bb      	ldrb	r3, [r7, #6]
 8000b10:	2b07      	cmp	r3, #7
 8000b12:	d834      	bhi.n	8000b7e <MGPIO_voidSetPinDirection+0xaa>
										GPIOA_CRL &= ~((0b1111)<<(Copy_Pin*4));
 8000b14:	4b91      	ldr	r3, [pc, #580]	@ (8000d5c <MGPIO_voidSetPinDirection+0x288>)
 8000b16:	681b      	ldr	r3, [r3, #0]
 8000b18:	79ba      	ldrb	r2, [r7, #6]
 8000b1a:	0092      	lsls	r2, r2, #2
 8000b1c:	210f      	movs	r1, #15
 8000b1e:	fa01 f202 	lsl.w	r2, r1, r2
 8000b22:	43d2      	mvns	r2, r2
 8000b24:	4611      	mov	r1, r2
 8000b26:	4a8d      	ldr	r2, [pc, #564]	@ (8000d5c <MGPIO_voidSetPinDirection+0x288>)
 8000b28:	400b      	ands	r3, r1
 8000b2a:	6013      	str	r3, [r2, #0]
										GPIOA_CRL |= ((Copy_Mode)<<(Copy_Pin*4));
 8000b2c:	4b8b      	ldr	r3, [pc, #556]	@ (8000d5c <MGPIO_voidSetPinDirection+0x288>)
 8000b2e:	681b      	ldr	r3, [r3, #0]
 8000b30:	7979      	ldrb	r1, [r7, #5]
 8000b32:	79ba      	ldrb	r2, [r7, #6]
 8000b34:	0092      	lsls	r2, r2, #2
 8000b36:	fa01 f202 	lsl.w	r2, r1, r2
 8000b3a:	4611      	mov	r1, r2
 8000b3c:	4a87      	ldr	r2, [pc, #540]	@ (8000d5c <MGPIO_voidSetPinDirection+0x288>)
 8000b3e:	430b      	orrs	r3, r1
 8000b40:	6013      	str	r3, [r2, #0]
										if(Copy_Mode == MGPIO_Input_PullUp)
 8000b42:	797b      	ldrb	r3, [r7, #5]
 8000b44:	2b08      	cmp	r3, #8
 8000b46:	d10a      	bne.n	8000b5e <MGPIO_voidSetPinDirection+0x8a>
											SET_BIT(GPIOA_ODR,Copy_Pin);
 8000b48:	4b85      	ldr	r3, [pc, #532]	@ (8000d60 <MGPIO_voidSetPinDirection+0x28c>)
 8000b4a:	681b      	ldr	r3, [r3, #0]
 8000b4c:	79ba      	ldrb	r2, [r7, #6]
 8000b4e:	2101      	movs	r1, #1
 8000b50:	fa01 f202 	lsl.w	r2, r1, r2
 8000b54:	4611      	mov	r1, r2
 8000b56:	4a82      	ldr	r2, [pc, #520]	@ (8000d60 <MGPIO_voidSetPinDirection+0x28c>)
 8000b58:	430b      	orrs	r3, r1
 8000b5a:	6013      	str	r3, [r2, #0]
									break;
 8000b5c:	e0f5      	b.n	8000d4a <MGPIO_voidSetPinDirection+0x276>
										else if(Copy_Mode == MGPIO_Input_PullDown)
 8000b5e:	797b      	ldrb	r3, [r7, #5]
 8000b60:	2b08      	cmp	r3, #8
 8000b62:	f040 80f2 	bne.w	8000d4a <MGPIO_voidSetPinDirection+0x276>
											CLR_BIT(GPIOA_ODR,Copy_Pin);
 8000b66:	4b7e      	ldr	r3, [pc, #504]	@ (8000d60 <MGPIO_voidSetPinDirection+0x28c>)
 8000b68:	681b      	ldr	r3, [r3, #0]
 8000b6a:	79ba      	ldrb	r2, [r7, #6]
 8000b6c:	2101      	movs	r1, #1
 8000b6e:	fa01 f202 	lsl.w	r2, r1, r2
 8000b72:	43d2      	mvns	r2, r2
 8000b74:	4611      	mov	r1, r2
 8000b76:	4a7a      	ldr	r2, [pc, #488]	@ (8000d60 <MGPIO_voidSetPinDirection+0x28c>)
 8000b78:	400b      	ands	r3, r1
 8000b7a:	6013      	str	r3, [r2, #0]
									break;
 8000b7c:	e0e5      	b.n	8000d4a <MGPIO_voidSetPinDirection+0x276>
									else if (Copy_Pin <= 15)
 8000b7e:	79bb      	ldrb	r3, [r7, #6]
 8000b80:	2b0f      	cmp	r3, #15
 8000b82:	f200 80e2 	bhi.w	8000d4a <MGPIO_voidSetPinDirection+0x276>
										if(Copy_Mode == MGPIO_Input_PullUp)
 8000b86:	797b      	ldrb	r3, [r7, #5]
 8000b88:	2b08      	cmp	r3, #8
 8000b8a:	d10a      	bne.n	8000ba2 <MGPIO_voidSetPinDirection+0xce>
											SET_BIT(GPIOA_ODR,Copy_Pin);
 8000b8c:	4b74      	ldr	r3, [pc, #464]	@ (8000d60 <MGPIO_voidSetPinDirection+0x28c>)
 8000b8e:	681b      	ldr	r3, [r3, #0]
 8000b90:	79ba      	ldrb	r2, [r7, #6]
 8000b92:	2101      	movs	r1, #1
 8000b94:	fa01 f202 	lsl.w	r2, r1, r2
 8000b98:	4611      	mov	r1, r2
 8000b9a:	4a71      	ldr	r2, [pc, #452]	@ (8000d60 <MGPIO_voidSetPinDirection+0x28c>)
 8000b9c:	430b      	orrs	r3, r1
 8000b9e:	6013      	str	r3, [r2, #0]
 8000ba0:	e00d      	b.n	8000bbe <MGPIO_voidSetPinDirection+0xea>
										else if(Copy_Mode == MGPIO_Input_PullDown)
 8000ba2:	797b      	ldrb	r3, [r7, #5]
 8000ba4:	2b08      	cmp	r3, #8
 8000ba6:	d10a      	bne.n	8000bbe <MGPIO_voidSetPinDirection+0xea>
											CLR_BIT(GPIOA_ODR,Copy_Pin);
 8000ba8:	4b6d      	ldr	r3, [pc, #436]	@ (8000d60 <MGPIO_voidSetPinDirection+0x28c>)
 8000baa:	681b      	ldr	r3, [r3, #0]
 8000bac:	79ba      	ldrb	r2, [r7, #6]
 8000bae:	2101      	movs	r1, #1
 8000bb0:	fa01 f202 	lsl.w	r2, r1, r2
 8000bb4:	43d2      	mvns	r2, r2
 8000bb6:	4611      	mov	r1, r2
 8000bb8:	4a69      	ldr	r2, [pc, #420]	@ (8000d60 <MGPIO_voidSetPinDirection+0x28c>)
 8000bba:	400b      	ands	r3, r1
 8000bbc:	6013      	str	r3, [r2, #0]
										Copy_Pin  -= 8;
 8000bbe:	79bb      	ldrb	r3, [r7, #6]
 8000bc0:	3b08      	subs	r3, #8
 8000bc2:	71bb      	strb	r3, [r7, #6]
										GPIOA_CRH &= ~((0b1111)<<(Copy_Pin*4));
 8000bc4:	4b67      	ldr	r3, [pc, #412]	@ (8000d64 <MGPIO_voidSetPinDirection+0x290>)
 8000bc6:	681b      	ldr	r3, [r3, #0]
 8000bc8:	79ba      	ldrb	r2, [r7, #6]
 8000bca:	0092      	lsls	r2, r2, #2
 8000bcc:	210f      	movs	r1, #15
 8000bce:	fa01 f202 	lsl.w	r2, r1, r2
 8000bd2:	43d2      	mvns	r2, r2
 8000bd4:	4611      	mov	r1, r2
 8000bd6:	4a63      	ldr	r2, [pc, #396]	@ (8000d64 <MGPIO_voidSetPinDirection+0x290>)
 8000bd8:	400b      	ands	r3, r1
 8000bda:	6013      	str	r3, [r2, #0]
									   GPIOA_CRH |= ((Copy_Mode)<<(Copy_Pin*4));
 8000bdc:	4b61      	ldr	r3, [pc, #388]	@ (8000d64 <MGPIO_voidSetPinDirection+0x290>)
 8000bde:	681b      	ldr	r3, [r3, #0]
 8000be0:	7979      	ldrb	r1, [r7, #5]
 8000be2:	79ba      	ldrb	r2, [r7, #6]
 8000be4:	0092      	lsls	r2, r2, #2
 8000be6:	fa01 f202 	lsl.w	r2, r1, r2
 8000bea:	4611      	mov	r1, r2
 8000bec:	4a5d      	ldr	r2, [pc, #372]	@ (8000d64 <MGPIO_voidSetPinDirection+0x290>)
 8000bee:	430b      	orrs	r3, r1
 8000bf0:	6013      	str	r3, [r2, #0]
									break;
 8000bf2:	e0aa      	b.n	8000d4a <MGPIO_voidSetPinDirection+0x276>
									if(Copy_Pin <=7)
 8000bf4:	79bb      	ldrb	r3, [r7, #6]
 8000bf6:	2b07      	cmp	r3, #7
 8000bf8:	d834      	bhi.n	8000c64 <MGPIO_voidSetPinDirection+0x190>
										GPIOB_CRL &= ~((0b1111)<<(Copy_Pin*4));
 8000bfa:	4b5b      	ldr	r3, [pc, #364]	@ (8000d68 <MGPIO_voidSetPinDirection+0x294>)
 8000bfc:	681b      	ldr	r3, [r3, #0]
 8000bfe:	79ba      	ldrb	r2, [r7, #6]
 8000c00:	0092      	lsls	r2, r2, #2
 8000c02:	210f      	movs	r1, #15
 8000c04:	fa01 f202 	lsl.w	r2, r1, r2
 8000c08:	43d2      	mvns	r2, r2
 8000c0a:	4611      	mov	r1, r2
 8000c0c:	4a56      	ldr	r2, [pc, #344]	@ (8000d68 <MGPIO_voidSetPinDirection+0x294>)
 8000c0e:	400b      	ands	r3, r1
 8000c10:	6013      	str	r3, [r2, #0]
										GPIOB_CRL |= ((Copy_Mode)<<(Copy_Pin*4));
 8000c12:	4b55      	ldr	r3, [pc, #340]	@ (8000d68 <MGPIO_voidSetPinDirection+0x294>)
 8000c14:	681b      	ldr	r3, [r3, #0]
 8000c16:	7979      	ldrb	r1, [r7, #5]
 8000c18:	79ba      	ldrb	r2, [r7, #6]
 8000c1a:	0092      	lsls	r2, r2, #2
 8000c1c:	fa01 f202 	lsl.w	r2, r1, r2
 8000c20:	4611      	mov	r1, r2
 8000c22:	4a51      	ldr	r2, [pc, #324]	@ (8000d68 <MGPIO_voidSetPinDirection+0x294>)
 8000c24:	430b      	orrs	r3, r1
 8000c26:	6013      	str	r3, [r2, #0]
										if(Copy_Mode == MGPIO_Input_PullUp)
 8000c28:	797b      	ldrb	r3, [r7, #5]
 8000c2a:	2b08      	cmp	r3, #8
 8000c2c:	d10a      	bne.n	8000c44 <MGPIO_voidSetPinDirection+0x170>
											SET_BIT(GPIOB_ODR,Copy_Pin);
 8000c2e:	4b4f      	ldr	r3, [pc, #316]	@ (8000d6c <MGPIO_voidSetPinDirection+0x298>)
 8000c30:	681b      	ldr	r3, [r3, #0]
 8000c32:	79ba      	ldrb	r2, [r7, #6]
 8000c34:	2101      	movs	r1, #1
 8000c36:	fa01 f202 	lsl.w	r2, r1, r2
 8000c3a:	4611      	mov	r1, r2
 8000c3c:	4a4b      	ldr	r2, [pc, #300]	@ (8000d6c <MGPIO_voidSetPinDirection+0x298>)
 8000c3e:	430b      	orrs	r3, r1
 8000c40:	6013      	str	r3, [r2, #0]
									break;
 8000c42:	e084      	b.n	8000d4e <MGPIO_voidSetPinDirection+0x27a>
										else if(Copy_Mode == MGPIO_Input_PullDown)
 8000c44:	797b      	ldrb	r3, [r7, #5]
 8000c46:	2b08      	cmp	r3, #8
 8000c48:	f040 8081 	bne.w	8000d4e <MGPIO_voidSetPinDirection+0x27a>
											CLR_BIT(GPIOB_ODR,Copy_Pin);
 8000c4c:	4b47      	ldr	r3, [pc, #284]	@ (8000d6c <MGPIO_voidSetPinDirection+0x298>)
 8000c4e:	681b      	ldr	r3, [r3, #0]
 8000c50:	79ba      	ldrb	r2, [r7, #6]
 8000c52:	2101      	movs	r1, #1
 8000c54:	fa01 f202 	lsl.w	r2, r1, r2
 8000c58:	43d2      	mvns	r2, r2
 8000c5a:	4611      	mov	r1, r2
 8000c5c:	4a43      	ldr	r2, [pc, #268]	@ (8000d6c <MGPIO_voidSetPinDirection+0x298>)
 8000c5e:	400b      	ands	r3, r1
 8000c60:	6013      	str	r3, [r2, #0]
									break;
 8000c62:	e074      	b.n	8000d4e <MGPIO_voidSetPinDirection+0x27a>
									else if (Copy_Pin <= 15)
 8000c64:	79bb      	ldrb	r3, [r7, #6]
 8000c66:	2b0f      	cmp	r3, #15
 8000c68:	d871      	bhi.n	8000d4e <MGPIO_voidSetPinDirection+0x27a>
										if(Copy_Mode == MGPIO_Input_PullUp)
 8000c6a:	797b      	ldrb	r3, [r7, #5]
 8000c6c:	2b08      	cmp	r3, #8
 8000c6e:	d10a      	bne.n	8000c86 <MGPIO_voidSetPinDirection+0x1b2>
											SET_BIT(GPIOB_ODR,Copy_Pin);
 8000c70:	4b3e      	ldr	r3, [pc, #248]	@ (8000d6c <MGPIO_voidSetPinDirection+0x298>)
 8000c72:	681b      	ldr	r3, [r3, #0]
 8000c74:	79ba      	ldrb	r2, [r7, #6]
 8000c76:	2101      	movs	r1, #1
 8000c78:	fa01 f202 	lsl.w	r2, r1, r2
 8000c7c:	4611      	mov	r1, r2
 8000c7e:	4a3b      	ldr	r2, [pc, #236]	@ (8000d6c <MGPIO_voidSetPinDirection+0x298>)
 8000c80:	430b      	orrs	r3, r1
 8000c82:	6013      	str	r3, [r2, #0]
 8000c84:	e00d      	b.n	8000ca2 <MGPIO_voidSetPinDirection+0x1ce>
										else if(Copy_Mode == MGPIO_Input_PullDown)
 8000c86:	797b      	ldrb	r3, [r7, #5]
 8000c88:	2b08      	cmp	r3, #8
 8000c8a:	d10a      	bne.n	8000ca2 <MGPIO_voidSetPinDirection+0x1ce>
											CLR_BIT(GPIOB_ODR,Copy_Pin);
 8000c8c:	4b37      	ldr	r3, [pc, #220]	@ (8000d6c <MGPIO_voidSetPinDirection+0x298>)
 8000c8e:	681b      	ldr	r3, [r3, #0]
 8000c90:	79ba      	ldrb	r2, [r7, #6]
 8000c92:	2101      	movs	r1, #1
 8000c94:	fa01 f202 	lsl.w	r2, r1, r2
 8000c98:	43d2      	mvns	r2, r2
 8000c9a:	4611      	mov	r1, r2
 8000c9c:	4a33      	ldr	r2, [pc, #204]	@ (8000d6c <MGPIO_voidSetPinDirection+0x298>)
 8000c9e:	400b      	ands	r3, r1
 8000ca0:	6013      	str	r3, [r2, #0]
										Copy_Pin  -= 8;
 8000ca2:	79bb      	ldrb	r3, [r7, #6]
 8000ca4:	3b08      	subs	r3, #8
 8000ca6:	71bb      	strb	r3, [r7, #6]
										GPIOB_CRH &= ~((0b1111)<<(Copy_Pin*4));
 8000ca8:	4b31      	ldr	r3, [pc, #196]	@ (8000d70 <MGPIO_voidSetPinDirection+0x29c>)
 8000caa:	681b      	ldr	r3, [r3, #0]
 8000cac:	79ba      	ldrb	r2, [r7, #6]
 8000cae:	0092      	lsls	r2, r2, #2
 8000cb0:	210f      	movs	r1, #15
 8000cb2:	fa01 f202 	lsl.w	r2, r1, r2
 8000cb6:	43d2      	mvns	r2, r2
 8000cb8:	4611      	mov	r1, r2
 8000cba:	4a2d      	ldr	r2, [pc, #180]	@ (8000d70 <MGPIO_voidSetPinDirection+0x29c>)
 8000cbc:	400b      	ands	r3, r1
 8000cbe:	6013      	str	r3, [r2, #0]
									   GPIOB_CRH |= ((Copy_Mode)<<(Copy_Pin*4));
 8000cc0:	4b2b      	ldr	r3, [pc, #172]	@ (8000d70 <MGPIO_voidSetPinDirection+0x29c>)
 8000cc2:	681b      	ldr	r3, [r3, #0]
 8000cc4:	7979      	ldrb	r1, [r7, #5]
 8000cc6:	79ba      	ldrb	r2, [r7, #6]
 8000cc8:	0092      	lsls	r2, r2, #2
 8000cca:	fa01 f202 	lsl.w	r2, r1, r2
 8000cce:	4611      	mov	r1, r2
 8000cd0:	4a27      	ldr	r2, [pc, #156]	@ (8000d70 <MGPIO_voidSetPinDirection+0x29c>)
 8000cd2:	430b      	orrs	r3, r1
 8000cd4:	6013      	str	r3, [r2, #0]
									break;
 8000cd6:	e03a      	b.n	8000d4e <MGPIO_voidSetPinDirection+0x27a>
									if(Copy_Pin <=7)
 8000cd8:	79bb      	ldrb	r3, [r7, #6]
 8000cda:	2b07      	cmp	r3, #7
 8000cdc:	d817      	bhi.n	8000d0e <MGPIO_voidSetPinDirection+0x23a>
										GPIOC_CRL &= ~((0b1111)<<(Copy_Pin*4));
 8000cde:	4b25      	ldr	r3, [pc, #148]	@ (8000d74 <MGPIO_voidSetPinDirection+0x2a0>)
 8000ce0:	681b      	ldr	r3, [r3, #0]
 8000ce2:	79ba      	ldrb	r2, [r7, #6]
 8000ce4:	0092      	lsls	r2, r2, #2
 8000ce6:	210f      	movs	r1, #15
 8000ce8:	fa01 f202 	lsl.w	r2, r1, r2
 8000cec:	43d2      	mvns	r2, r2
 8000cee:	4611      	mov	r1, r2
 8000cf0:	4a20      	ldr	r2, [pc, #128]	@ (8000d74 <MGPIO_voidSetPinDirection+0x2a0>)
 8000cf2:	400b      	ands	r3, r1
 8000cf4:	6013      	str	r3, [r2, #0]
										GPIOC_CRL |= ((Copy_Mode)<<(Copy_Pin*4));
 8000cf6:	4b1f      	ldr	r3, [pc, #124]	@ (8000d74 <MGPIO_voidSetPinDirection+0x2a0>)
 8000cf8:	681b      	ldr	r3, [r3, #0]
 8000cfa:	7979      	ldrb	r1, [r7, #5]
 8000cfc:	79ba      	ldrb	r2, [r7, #6]
 8000cfe:	0092      	lsls	r2, r2, #2
 8000d00:	fa01 f202 	lsl.w	r2, r1, r2
 8000d04:	4611      	mov	r1, r2
 8000d06:	4a1b      	ldr	r2, [pc, #108]	@ (8000d74 <MGPIO_voidSetPinDirection+0x2a0>)
 8000d08:	430b      	orrs	r3, r1
 8000d0a:	6013      	str	r3, [r2, #0]
 8000d0c:	e011      	b.n	8000d32 <MGPIO_voidSetPinDirection+0x25e>
									else if (Copy_Pin <= 15)
 8000d0e:	79bb      	ldrb	r3, [r7, #6]
 8000d10:	2b0f      	cmp	r3, #15
 8000d12:	d80e      	bhi.n	8000d32 <MGPIO_voidSetPinDirection+0x25e>
										Copy_Pin  -= 8;
 8000d14:	79bb      	ldrb	r3, [r7, #6]
 8000d16:	3b08      	subs	r3, #8
 8000d18:	71bb      	strb	r3, [r7, #6]
										GPIOC_CRH &= ~((0b1111)<<(Copy_Pin*4));
 8000d1a:	4b17      	ldr	r3, [pc, #92]	@ (8000d78 <MGPIO_voidSetPinDirection+0x2a4>)
 8000d1c:	681b      	ldr	r3, [r3, #0]
 8000d1e:	79ba      	ldrb	r2, [r7, #6]
 8000d20:	0092      	lsls	r2, r2, #2
 8000d22:	210f      	movs	r1, #15
 8000d24:	fa01 f202 	lsl.w	r2, r1, r2
 8000d28:	43d2      	mvns	r2, r2
 8000d2a:	4611      	mov	r1, r2
 8000d2c:	4a12      	ldr	r2, [pc, #72]	@ (8000d78 <MGPIO_voidSetPinDirection+0x2a4>)
 8000d2e:	400b      	ands	r3, r1
 8000d30:	6013      	str	r3, [r2, #0]
									}   GPIOC_CRH |= ((Copy_Mode)<<(Copy_Pin*4));
 8000d32:	4b11      	ldr	r3, [pc, #68]	@ (8000d78 <MGPIO_voidSetPinDirection+0x2a4>)
 8000d34:	681b      	ldr	r3, [r3, #0]
 8000d36:	7979      	ldrb	r1, [r7, #5]
 8000d38:	79ba      	ldrb	r2, [r7, #6]
 8000d3a:	0092      	lsls	r2, r2, #2
 8000d3c:	fa01 f202 	lsl.w	r2, r1, r2
 8000d40:	4611      	mov	r1, r2
 8000d42:	4a0d      	ldr	r2, [pc, #52]	@ (8000d78 <MGPIO_voidSetPinDirection+0x2a4>)
 8000d44:	430b      	orrs	r3, r1
 8000d46:	6013      	str	r3, [r2, #0]
									break;
 8000d48:	e002      	b.n	8000d50 <MGPIO_voidSetPinDirection+0x27c>
									break;
 8000d4a:	bf00      	nop
 8000d4c:	e000      	b.n	8000d50 <MGPIO_voidSetPinDirection+0x27c>
									break;
 8000d4e:	bf00      	nop
}
 8000d50:	bf00      	nop
 8000d52:	370c      	adds	r7, #12
 8000d54:	46bd      	mov	sp, r7
 8000d56:	bc80      	pop	{r7}
 8000d58:	4770      	bx	lr
 8000d5a:	bf00      	nop
 8000d5c:	40010800 	.word	0x40010800
 8000d60:	4001080c 	.word	0x4001080c
 8000d64:	40010804 	.word	0x40010804
 8000d68:	40010c00 	.word	0x40010c00
 8000d6c:	40010c0c 	.word	0x40010c0c
 8000d70:	40010c04 	.word	0x40010c04
 8000d74:	40011000 	.word	0x40011000
 8000d78:	40011004 	.word	0x40011004
 8000d7c:	00000000 	.word	0x00000000

08000d80 <MRCC_voidInitSysClock>:
#include "RCC_interface.h"
#include "RCC_privet.h"
#include "RCC_config.h"
/***************************** Code Section *********************************/
void MRCC_voidInitSysClock(void)
{
 8000d80:	b580      	push	{r7, lr}
 8000d82:	af00      	add	r7, sp, #0

RCC_CFGR |= ((u8)(log2(RCC_APB1_PRESCALLER)+3))<<8 ;
 8000d84:	f04f 0000 	mov.w	r0, #0
 8000d88:	f04f 0100 	mov.w	r1, #0
 8000d8c:	f000 f93e 	bl	800100c <log>
 8000d90:	a337      	add	r3, pc, #220	@ (adr r3, 8000e70 <MRCC_voidInitSysClock+0xf0>)
 8000d92:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000d96:	f7ff fcd1 	bl	800073c <__aeabi_ddiv>
 8000d9a:	4602      	mov	r2, r0
 8000d9c:	460b      	mov	r3, r1
 8000d9e:	4610      	mov	r0, r2
 8000da0:	4619      	mov	r1, r3
 8000da2:	f04f 0200 	mov.w	r2, #0
 8000da6:	4b34      	ldr	r3, [pc, #208]	@ (8000e78 <MRCC_voidInitSysClock+0xf8>)
 8000da8:	f7ff f9e8 	bl	800017c <__adddf3>
 8000dac:	4602      	mov	r2, r0
 8000dae:	460b      	mov	r3, r1
 8000db0:	4610      	mov	r0, r2
 8000db2:	4619      	mov	r1, r3
 8000db4:	f7ff fe48 	bl	8000a48 <__aeabi_d2uiz>
 8000db8:	4603      	mov	r3, r0
 8000dba:	b2db      	uxtb	r3, r3
 8000dbc:	021a      	lsls	r2, r3, #8
 8000dbe:	4b2f      	ldr	r3, [pc, #188]	@ (8000e7c <MRCC_voidInitSysClock+0xfc>)
 8000dc0:	681b      	ldr	r3, [r3, #0]
 8000dc2:	4611      	mov	r1, r2
 8000dc4:	4a2d      	ldr	r2, [pc, #180]	@ (8000e7c <MRCC_voidInitSysClock+0xfc>)
 8000dc6:	430b      	orrs	r3, r1
 8000dc8:	6013      	str	r3, [r2, #0]
RCC_CFGR |= ((u8)(log2(RCC_APB2_PRESCALLER)+3))<<11 ;
 8000dca:	f04f 0000 	mov.w	r0, #0
 8000dce:	f04f 0100 	mov.w	r1, #0
 8000dd2:	f000 f91b 	bl	800100c <log>
 8000dd6:	a326      	add	r3, pc, #152	@ (adr r3, 8000e70 <MRCC_voidInitSysClock+0xf0>)
 8000dd8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000ddc:	f7ff fcae 	bl	800073c <__aeabi_ddiv>
 8000de0:	4602      	mov	r2, r0
 8000de2:	460b      	mov	r3, r1
 8000de4:	4610      	mov	r0, r2
 8000de6:	4619      	mov	r1, r3
 8000de8:	f04f 0200 	mov.w	r2, #0
 8000dec:	4b22      	ldr	r3, [pc, #136]	@ (8000e78 <MRCC_voidInitSysClock+0xf8>)
 8000dee:	f7ff f9c5 	bl	800017c <__adddf3>
 8000df2:	4602      	mov	r2, r0
 8000df4:	460b      	mov	r3, r1
 8000df6:	4610      	mov	r0, r2
 8000df8:	4619      	mov	r1, r3
 8000dfa:	f7ff fe25 	bl	8000a48 <__aeabi_d2uiz>
 8000dfe:	4603      	mov	r3, r0
 8000e00:	b2db      	uxtb	r3, r3
 8000e02:	02da      	lsls	r2, r3, #11
 8000e04:	4b1d      	ldr	r3, [pc, #116]	@ (8000e7c <MRCC_voidInitSysClock+0xfc>)
 8000e06:	681b      	ldr	r3, [r3, #0]
 8000e08:	4611      	mov	r1, r2
 8000e0a:	4a1c      	ldr	r2, [pc, #112]	@ (8000e7c <MRCC_voidInitSysClock+0xfc>)
 8000e0c:	430b      	orrs	r3, r1
 8000e0e:	6013      	str	r3, [r2, #0]

#if RCC_AHP_PRESCALLER <=16
RCC_CFGR |= ((u8)(log2(RCC_AHP_PRESCALLER)+7))<<4;
 8000e10:	f04f 0000 	mov.w	r0, #0
 8000e14:	f04f 0100 	mov.w	r1, #0
 8000e18:	f000 f8f8 	bl	800100c <log>
 8000e1c:	a314      	add	r3, pc, #80	@ (adr r3, 8000e70 <MRCC_voidInitSysClock+0xf0>)
 8000e1e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000e22:	f7ff fc8b 	bl	800073c <__aeabi_ddiv>
 8000e26:	4602      	mov	r2, r0
 8000e28:	460b      	mov	r3, r1
 8000e2a:	4610      	mov	r0, r2
 8000e2c:	4619      	mov	r1, r3
 8000e2e:	f04f 0200 	mov.w	r2, #0
 8000e32:	4b13      	ldr	r3, [pc, #76]	@ (8000e80 <MRCC_voidInitSysClock+0x100>)
 8000e34:	f7ff f9a2 	bl	800017c <__adddf3>
 8000e38:	4602      	mov	r2, r0
 8000e3a:	460b      	mov	r3, r1
 8000e3c:	4610      	mov	r0, r2
 8000e3e:	4619      	mov	r1, r3
 8000e40:	f7ff fe02 	bl	8000a48 <__aeabi_d2uiz>
 8000e44:	4603      	mov	r3, r0
 8000e46:	b2db      	uxtb	r3, r3
 8000e48:	011a      	lsls	r2, r3, #4
 8000e4a:	4b0c      	ldr	r3, [pc, #48]	@ (8000e7c <MRCC_voidInitSysClock+0xfc>)
 8000e4c:	681b      	ldr	r3, [r3, #0]
 8000e4e:	4611      	mov	r1, r2
 8000e50:	4a0a      	ldr	r2, [pc, #40]	@ (8000e7c <MRCC_voidInitSysClock+0xfc>)
 8000e52:	430b      	orrs	r3, r1
 8000e54:	6013      	str	r3, [r2, #0]
#elif
RCC_CFGR |= ((u8)(log2(RCC_AHP_PRESCALLER)+6))<<4;
#endif

	#if			RCC_Clock_TYPE	==	RCC_HSE_CRYSTAL	
				RCC_CR = 0x00010000;	//set HSEON HIGH / HSEBYP LOW
 8000e56:	4b0b      	ldr	r3, [pc, #44]	@ (8000e84 <MRCC_voidInitSysClock+0x104>)
 8000e58:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8000e5c:	601a      	str	r2, [r3, #0]
				RCC_CFGR |= 0x00000001;	//Set Source clcok HSE
 8000e5e:	4b07      	ldr	r3, [pc, #28]	@ (8000e7c <MRCC_voidInitSysClock+0xfc>)
 8000e60:	681b      	ldr	r3, [r3, #0]
 8000e62:	4a06      	ldr	r2, [pc, #24]	@ (8000e7c <MRCC_voidInitSysClock+0xfc>)
 8000e64:	f043 0301 	orr.w	r3, r3, #1
 8000e68:	6013      	str	r3, [r2, #0]
		#endif
	#else 		
		#error "clock sourc type is worng"
	 
	#endif
}	
 8000e6a:	bf00      	nop
 8000e6c:	bd80      	pop	{r7, pc}
 8000e6e:	bf00      	nop
 8000e70:	fefa39ef 	.word	0xfefa39ef
 8000e74:	3fe62e42 	.word	0x3fe62e42
 8000e78:	40080000 	.word	0x40080000
 8000e7c:	40021004 	.word	0x40021004
 8000e80:	401c0000 	.word	0x401c0000
 8000e84:	40021000 	.word	0x40021000

08000e88 <MRCC_voidEnablePeripheral>:



void MRCC_voidEnablePeripheral(u8 Copy_IdBus,u8 Copy_Peripheral)
{
 8000e88:	b480      	push	{r7}
 8000e8a:	b083      	sub	sp, #12
 8000e8c:	af00      	add	r7, sp, #0
 8000e8e:	4603      	mov	r3, r0
 8000e90:	460a      	mov	r2, r1
 8000e92:	71fb      	strb	r3, [r7, #7]
 8000e94:	4613      	mov	r3, r2
 8000e96:	71bb      	strb	r3, [r7, #6]
	if(Copy_Peripheral<=31)
 8000e98:	79bb      	ldrb	r3, [r7, #6]
 8000e9a:	2b1f      	cmp	r3, #31
 8000e9c:	d82a      	bhi.n	8000ef4 <MRCC_voidEnablePeripheral+0x6c>
	{	
	switch(Copy_IdBus)
 8000e9e:	79fb      	ldrb	r3, [r7, #7]
 8000ea0:	2b03      	cmp	r3, #3
 8000ea2:	d01c      	beq.n	8000ede <MRCC_voidEnablePeripheral+0x56>
 8000ea4:	2b03      	cmp	r3, #3
 8000ea6:	dc25      	bgt.n	8000ef4 <MRCC_voidEnablePeripheral+0x6c>
 8000ea8:	2b01      	cmp	r3, #1
 8000eaa:	d002      	beq.n	8000eb2 <MRCC_voidEnablePeripheral+0x2a>
 8000eac:	2b02      	cmp	r3, #2
 8000eae:	d00b      	beq.n	8000ec8 <MRCC_voidEnablePeripheral+0x40>
	else
	{
		//error
	}
	
}
 8000eb0:	e020      	b.n	8000ef4 <MRCC_voidEnablePeripheral+0x6c>
		case RCC_AHB	:SET_BIT(RCC_AHBENR,Copy_Peripheral);break;
 8000eb2:	4b13      	ldr	r3, [pc, #76]	@ (8000f00 <MRCC_voidEnablePeripheral+0x78>)
 8000eb4:	681b      	ldr	r3, [r3, #0]
 8000eb6:	79ba      	ldrb	r2, [r7, #6]
 8000eb8:	2101      	movs	r1, #1
 8000eba:	fa01 f202 	lsl.w	r2, r1, r2
 8000ebe:	4611      	mov	r1, r2
 8000ec0:	4a0f      	ldr	r2, [pc, #60]	@ (8000f00 <MRCC_voidEnablePeripheral+0x78>)
 8000ec2:	430b      	orrs	r3, r1
 8000ec4:	6013      	str	r3, [r2, #0]
 8000ec6:	e015      	b.n	8000ef4 <MRCC_voidEnablePeripheral+0x6c>
		case RCC_APB1   :SET_BIT(RCC_APB1ENR,Copy_Peripheral);break;
 8000ec8:	4b0e      	ldr	r3, [pc, #56]	@ (8000f04 <MRCC_voidEnablePeripheral+0x7c>)
 8000eca:	681b      	ldr	r3, [r3, #0]
 8000ecc:	79ba      	ldrb	r2, [r7, #6]
 8000ece:	2101      	movs	r1, #1
 8000ed0:	fa01 f202 	lsl.w	r2, r1, r2
 8000ed4:	4611      	mov	r1, r2
 8000ed6:	4a0b      	ldr	r2, [pc, #44]	@ (8000f04 <MRCC_voidEnablePeripheral+0x7c>)
 8000ed8:	430b      	orrs	r3, r1
 8000eda:	6013      	str	r3, [r2, #0]
 8000edc:	e00a      	b.n	8000ef4 <MRCC_voidEnablePeripheral+0x6c>
		case RCC_APB2   :SET_BIT(RCC_APB2ENR,Copy_Peripheral);break;
 8000ede:	4b0a      	ldr	r3, [pc, #40]	@ (8000f08 <MRCC_voidEnablePeripheral+0x80>)
 8000ee0:	681b      	ldr	r3, [r3, #0]
 8000ee2:	79ba      	ldrb	r2, [r7, #6]
 8000ee4:	2101      	movs	r1, #1
 8000ee6:	fa01 f202 	lsl.w	r2, r1, r2
 8000eea:	4611      	mov	r1, r2
 8000eec:	4a06      	ldr	r2, [pc, #24]	@ (8000f08 <MRCC_voidEnablePeripheral+0x80>)
 8000eee:	430b      	orrs	r3, r1
 8000ef0:	6013      	str	r3, [r2, #0]
 8000ef2:	bf00      	nop
}
 8000ef4:	bf00      	nop
 8000ef6:	370c      	adds	r7, #12
 8000ef8:	46bd      	mov	sp, r7
 8000efa:	bc80      	pop	{r7}
 8000efc:	4770      	bx	lr
 8000efe:	bf00      	nop
 8000f00:	40021014 	.word	0x40021014
 8000f04:	4002101c 	.word	0x4002101c
 8000f08:	40021018 	.word	0x40021018

08000f0c <Frame>:



/***************************** Function protype Section *****************************/
void Frame()
{
 8000f0c:	b480      	push	{r7}
 8000f0e:	af00      	add	r7, sp, #0
	}
 8000f10:	bf00      	nop
 8000f12:	46bd      	mov	sp, r7
 8000f14:	bc80      	pop	{r7}
 8000f16:	4770      	bx	lr

08000f18 <main>:


/***************************** main code Section *****************************/

int main()
{
 8000f18:	b580      	push	{r7, lr}
 8000f1a:	af00      	add	r7, sp, #0
	/* initialize the RCC to get 1MHz */
	MRCC_voidInitSysClock();
 8000f1c:	f7ff ff30 	bl	8000d80 <MRCC_voidInitSysClock>
	MRCC_voidEnablePeripheral(RCC_APB2, 2); /*Enable GPIOA peripheral */
 8000f20:	2102      	movs	r1, #2
 8000f22:	2003      	movs	r0, #3
 8000f24:	f7ff ffb0 	bl	8000e88 <MRCC_voidEnablePeripheral>

	/* initialize GPIOA peripheral */
	MGPIO_voidSetPinDirection(MGPIO_GPIOA, MGPIO_PIN0, MGPIO_Input_Floating); /* GPIOA0 floating input*/
 8000f28:	2204      	movs	r2, #4
 8000f2a:	2100      	movs	r1, #0
 8000f2c:	2000      	movs	r0, #0
 8000f2e:	f7ff fdd1 	bl	8000ad4 <MGPIO_voidSetPinDirection>
	MGPIO_voidSetPinDirection(MGPIO_GPIOA, MGPIO_PIN1, MGPIO_Output_PP_2MHZ); /* GPIOA1 PP output*/
 8000f32:	2202      	movs	r2, #2
 8000f34:	2101      	movs	r1, #1
 8000f36:	2000      	movs	r0, #0
 8000f38:	f7ff fdcc 	bl	8000ad4 <MGPIO_voidSetPinDirection>
	MGPIO_voidSetPinDirection(MGPIO_GPIOA, MGPIO_PIN2, MGPIO_Output_PP_2MHZ); /* GPIOA2 PP output*/
 8000f3c:	2202      	movs	r2, #2
 8000f3e:	2102      	movs	r1, #2
 8000f40:	2000      	movs	r0, #0
 8000f42:	f7ff fdc7 	bl	8000ad4 <MGPIO_voidSetPinDirection>
	MGPIO_voidSetPinDirection(MGPIO_GPIOA, MGPIO_PIN3, MGPIO_Output_PP_2MHZ); /* GPIOA3 PP output*/
 8000f46:	2202      	movs	r2, #2
 8000f48:	2103      	movs	r1, #3
 8000f4a:	2000      	movs	r0, #0
 8000f4c:	f7ff fdc2 	bl	8000ad4 <MGPIO_voidSetPinDirection>

	/*EXTI0 initialization*/
	MEXTI_voidSetCallBack(Frame);
 8000f50:	4803      	ldr	r0, [pc, #12]	@ (8000f60 <main+0x48>)
 8000f52:	f7ff fda7 	bl	8000aa4 <MEXTI_voidSetCallBack>
	MEXTI_voidInit();		/* EXTI0 and in falling edge mood*/
 8000f56:	f7ff fd97 	bl	8000a88 <MEXTI_voidInit>


    while(1)
 8000f5a:	bf00      	nop
 8000f5c:	e7fd      	b.n	8000f5a <main+0x42>
 8000f5e:	bf00      	nop
 8000f60:	08000f0d 	.word	0x08000f0d

08000f64 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000f64:	480d      	ldr	r0, [pc, #52]	@ (8000f9c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000f66:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000f68:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000f6c:	480c      	ldr	r0, [pc, #48]	@ (8000fa0 <LoopForever+0x6>)
  ldr r1, =_edata
 8000f6e:	490d      	ldr	r1, [pc, #52]	@ (8000fa4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000f70:	4a0d      	ldr	r2, [pc, #52]	@ (8000fa8 <LoopForever+0xe>)
  movs r3, #0
 8000f72:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000f74:	e002      	b.n	8000f7c <LoopCopyDataInit>

08000f76 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000f76:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000f78:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000f7a:	3304      	adds	r3, #4

08000f7c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000f7c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000f7e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000f80:	d3f9      	bcc.n	8000f76 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000f82:	4a0a      	ldr	r2, [pc, #40]	@ (8000fac <LoopForever+0x12>)
  ldr r4, =_ebss
 8000f84:	4c0a      	ldr	r4, [pc, #40]	@ (8000fb0 <LoopForever+0x16>)
  movs r3, #0
 8000f86:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000f88:	e001      	b.n	8000f8e <LoopFillZerobss>

08000f8a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000f8a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000f8c:	3204      	adds	r2, #4

08000f8e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000f8e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000f90:	d3fb      	bcc.n	8000f8a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000f92:	f000 f817 	bl	8000fc4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000f96:	f7ff ffbf 	bl	8000f18 <main>

08000f9a <LoopForever>:

LoopForever:
  b LoopForever
 8000f9a:	e7fe      	b.n	8000f9a <LoopForever>
  ldr   r0, =_estack
 8000f9c:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8000fa0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000fa4:	20000050 	.word	0x20000050
  ldr r2, =_sidata
 8000fa8:	08001408 	.word	0x08001408
  ldr r2, =_sbss
 8000fac:	20000050 	.word	0x20000050
  ldr r4, =_ebss
 8000fb0:	200001a8 	.word	0x200001a8

08000fb4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000fb4:	e7fe      	b.n	8000fb4 <ADC1_2_IRQHandler>
	...

08000fb8 <__errno>:
 8000fb8:	4b01      	ldr	r3, [pc, #4]	@ (8000fc0 <__errno+0x8>)
 8000fba:	6818      	ldr	r0, [r3, #0]
 8000fbc:	4770      	bx	lr
 8000fbe:	bf00      	nop
 8000fc0:	20000000 	.word	0x20000000

08000fc4 <__libc_init_array>:
 8000fc4:	b570      	push	{r4, r5, r6, lr}
 8000fc6:	2600      	movs	r6, #0
 8000fc8:	4d0c      	ldr	r5, [pc, #48]	@ (8000ffc <__libc_init_array+0x38>)
 8000fca:	4c0d      	ldr	r4, [pc, #52]	@ (8001000 <__libc_init_array+0x3c>)
 8000fcc:	1b64      	subs	r4, r4, r5
 8000fce:	10a4      	asrs	r4, r4, #2
 8000fd0:	42a6      	cmp	r6, r4
 8000fd2:	d109      	bne.n	8000fe8 <__libc_init_array+0x24>
 8000fd4:	f000 fa06 	bl	80013e4 <_init>
 8000fd8:	2600      	movs	r6, #0
 8000fda:	4d0a      	ldr	r5, [pc, #40]	@ (8001004 <__libc_init_array+0x40>)
 8000fdc:	4c0a      	ldr	r4, [pc, #40]	@ (8001008 <__libc_init_array+0x44>)
 8000fde:	1b64      	subs	r4, r4, r5
 8000fe0:	10a4      	asrs	r4, r4, #2
 8000fe2:	42a6      	cmp	r6, r4
 8000fe4:	d105      	bne.n	8000ff2 <__libc_init_array+0x2e>
 8000fe6:	bd70      	pop	{r4, r5, r6, pc}
 8000fe8:	f855 3b04 	ldr.w	r3, [r5], #4
 8000fec:	4798      	blx	r3
 8000fee:	3601      	adds	r6, #1
 8000ff0:	e7ee      	b.n	8000fd0 <__libc_init_array+0xc>
 8000ff2:	f855 3b04 	ldr.w	r3, [r5], #4
 8000ff6:	4798      	blx	r3
 8000ff8:	3601      	adds	r6, #1
 8000ffa:	e7f2      	b.n	8000fe2 <__libc_init_array+0x1e>
 8000ffc:	08001400 	.word	0x08001400
 8001000:	08001400 	.word	0x08001400
 8001004:	08001400 	.word	0x08001400
 8001008:	08001404 	.word	0x08001404

0800100c <log>:
 800100c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800100e:	4604      	mov	r4, r0
 8001010:	460d      	mov	r5, r1
 8001012:	f000 f835 	bl	8001080 <__ieee754_log>
 8001016:	4622      	mov	r2, r4
 8001018:	4606      	mov	r6, r0
 800101a:	460f      	mov	r7, r1
 800101c:	462b      	mov	r3, r5
 800101e:	4620      	mov	r0, r4
 8001020:	4629      	mov	r1, r5
 8001022:	f7ff fcfb 	bl	8000a1c <__aeabi_dcmpun>
 8001026:	b998      	cbnz	r0, 8001050 <log+0x44>
 8001028:	2200      	movs	r2, #0
 800102a:	2300      	movs	r3, #0
 800102c:	4620      	mov	r0, r4
 800102e:	4629      	mov	r1, r5
 8001030:	f7ff fcea 	bl	8000a08 <__aeabi_dcmpgt>
 8001034:	b960      	cbnz	r0, 8001050 <log+0x44>
 8001036:	2200      	movs	r2, #0
 8001038:	2300      	movs	r3, #0
 800103a:	4620      	mov	r0, r4
 800103c:	4629      	mov	r1, r5
 800103e:	f7ff fcbb 	bl	80009b8 <__aeabi_dcmpeq>
 8001042:	b140      	cbz	r0, 8001056 <log+0x4a>
 8001044:	f7ff ffb8 	bl	8000fb8 <__errno>
 8001048:	2322      	movs	r3, #34	@ 0x22
 800104a:	2600      	movs	r6, #0
 800104c:	4f06      	ldr	r7, [pc, #24]	@ (8001068 <log+0x5c>)
 800104e:	6003      	str	r3, [r0, #0]
 8001050:	4630      	mov	r0, r6
 8001052:	4639      	mov	r1, r7
 8001054:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001056:	f7ff ffaf 	bl	8000fb8 <__errno>
 800105a:	2321      	movs	r3, #33	@ 0x21
 800105c:	6003      	str	r3, [r0, #0]
 800105e:	4803      	ldr	r0, [pc, #12]	@ (800106c <log+0x60>)
 8001060:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8001064:	f000 b804 	b.w	8001070 <nan>
 8001068:	fff00000 	.word	0xfff00000
 800106c:	080013fc 	.word	0x080013fc

08001070 <nan>:
 8001070:	2000      	movs	r0, #0
 8001072:	4901      	ldr	r1, [pc, #4]	@ (8001078 <nan+0x8>)
 8001074:	4770      	bx	lr
 8001076:	bf00      	nop
 8001078:	7ff80000 	.word	0x7ff80000
 800107c:	00000000 	.word	0x00000000

08001080 <__ieee754_log>:
 8001080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001084:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8001088:	4602      	mov	r2, r0
 800108a:	460b      	mov	r3, r1
 800108c:	460d      	mov	r5, r1
 800108e:	b087      	sub	sp, #28
 8001090:	da24      	bge.n	80010dc <__ieee754_log+0x5c>
 8001092:	f021 4400 	bic.w	r4, r1, #2147483648	@ 0x80000000
 8001096:	4304      	orrs	r4, r0
 8001098:	d108      	bne.n	80010ac <__ieee754_log+0x2c>
 800109a:	2200      	movs	r2, #0
 800109c:	2300      	movs	r3, #0
 800109e:	2000      	movs	r0, #0
 80010a0:	49cb      	ldr	r1, [pc, #812]	@ (80013d0 <__ieee754_log+0x350>)
 80010a2:	f7ff fb4b 	bl	800073c <__aeabi_ddiv>
 80010a6:	b007      	add	sp, #28
 80010a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80010ac:	2900      	cmp	r1, #0
 80010ae:	da04      	bge.n	80010ba <__ieee754_log+0x3a>
 80010b0:	f7ff f862 	bl	8000178 <__aeabi_dsub>
 80010b4:	2200      	movs	r2, #0
 80010b6:	2300      	movs	r3, #0
 80010b8:	e7f3      	b.n	80010a2 <__ieee754_log+0x22>
 80010ba:	2200      	movs	r2, #0
 80010bc:	4bc5      	ldr	r3, [pc, #788]	@ (80013d4 <__ieee754_log+0x354>)
 80010be:	f7ff fa13 	bl	80004e8 <__aeabi_dmul>
 80010c2:	460b      	mov	r3, r1
 80010c4:	460d      	mov	r5, r1
 80010c6:	4602      	mov	r2, r0
 80010c8:	f06f 0135 	mvn.w	r1, #53	@ 0x35
 80010cc:	48c2      	ldr	r0, [pc, #776]	@ (80013d8 <__ieee754_log+0x358>)
 80010ce:	4285      	cmp	r5, r0
 80010d0:	dd06      	ble.n	80010e0 <__ieee754_log+0x60>
 80010d2:	4610      	mov	r0, r2
 80010d4:	4619      	mov	r1, r3
 80010d6:	f7ff f851 	bl	800017c <__adddf3>
 80010da:	e7e4      	b.n	80010a6 <__ieee754_log+0x26>
 80010dc:	2100      	movs	r1, #0
 80010de:	e7f5      	b.n	80010cc <__ieee754_log+0x4c>
 80010e0:	152c      	asrs	r4, r5, #20
 80010e2:	f2a4 34ff 	subw	r4, r4, #1023	@ 0x3ff
 80010e6:	f3c5 0513 	ubfx	r5, r5, #0, #20
 80010ea:	440c      	add	r4, r1
 80010ec:	f505 2115 	add.w	r1, r5, #610304	@ 0x95000
 80010f0:	f601 7164 	addw	r1, r1, #3940	@ 0xf64
 80010f4:	f401 1680 	and.w	r6, r1, #1048576	@ 0x100000
 80010f8:	f086 517f 	eor.w	r1, r6, #1069547520	@ 0x3fc00000
 80010fc:	f481 1140 	eor.w	r1, r1, #3145728	@ 0x300000
 8001100:	ea41 0305 	orr.w	r3, r1, r5
 8001104:	4610      	mov	r0, r2
 8001106:	4619      	mov	r1, r3
 8001108:	2200      	movs	r2, #0
 800110a:	4bb4      	ldr	r3, [pc, #720]	@ (80013dc <__ieee754_log+0x35c>)
 800110c:	f7ff f834 	bl	8000178 <__aeabi_dsub>
 8001110:	1cab      	adds	r3, r5, #2
 8001112:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8001116:	2b02      	cmp	r3, #2
 8001118:	4682      	mov	sl, r0
 800111a:	468b      	mov	fp, r1
 800111c:	f04f 0200 	mov.w	r2, #0
 8001120:	eb04 5416 	add.w	r4, r4, r6, lsr #20
 8001124:	dc53      	bgt.n	80011ce <__ieee754_log+0x14e>
 8001126:	2300      	movs	r3, #0
 8001128:	f7ff fc46 	bl	80009b8 <__aeabi_dcmpeq>
 800112c:	b1d0      	cbz	r0, 8001164 <__ieee754_log+0xe4>
 800112e:	2c00      	cmp	r4, #0
 8001130:	f000 8120 	beq.w	8001374 <__ieee754_log+0x2f4>
 8001134:	4620      	mov	r0, r4
 8001136:	f7ff f96d 	bl	8000414 <__aeabi_i2d>
 800113a:	a391      	add	r3, pc, #580	@ (adr r3, 8001380 <__ieee754_log+0x300>)
 800113c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001140:	4606      	mov	r6, r0
 8001142:	460f      	mov	r7, r1
 8001144:	f7ff f9d0 	bl	80004e8 <__aeabi_dmul>
 8001148:	a38f      	add	r3, pc, #572	@ (adr r3, 8001388 <__ieee754_log+0x308>)
 800114a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800114e:	4604      	mov	r4, r0
 8001150:	460d      	mov	r5, r1
 8001152:	4630      	mov	r0, r6
 8001154:	4639      	mov	r1, r7
 8001156:	f7ff f9c7 	bl	80004e8 <__aeabi_dmul>
 800115a:	4602      	mov	r2, r0
 800115c:	460b      	mov	r3, r1
 800115e:	4620      	mov	r0, r4
 8001160:	4629      	mov	r1, r5
 8001162:	e7b8      	b.n	80010d6 <__ieee754_log+0x56>
 8001164:	a38a      	add	r3, pc, #552	@ (adr r3, 8001390 <__ieee754_log+0x310>)
 8001166:	e9d3 2300 	ldrd	r2, r3, [r3]
 800116a:	4650      	mov	r0, sl
 800116c:	4659      	mov	r1, fp
 800116e:	f7ff f9bb 	bl	80004e8 <__aeabi_dmul>
 8001172:	4602      	mov	r2, r0
 8001174:	460b      	mov	r3, r1
 8001176:	2000      	movs	r0, #0
 8001178:	4999      	ldr	r1, [pc, #612]	@ (80013e0 <__ieee754_log+0x360>)
 800117a:	f7fe fffd 	bl	8000178 <__aeabi_dsub>
 800117e:	4652      	mov	r2, sl
 8001180:	4606      	mov	r6, r0
 8001182:	460f      	mov	r7, r1
 8001184:	465b      	mov	r3, fp
 8001186:	4650      	mov	r0, sl
 8001188:	4659      	mov	r1, fp
 800118a:	f7ff f9ad 	bl	80004e8 <__aeabi_dmul>
 800118e:	4602      	mov	r2, r0
 8001190:	460b      	mov	r3, r1
 8001192:	4630      	mov	r0, r6
 8001194:	4639      	mov	r1, r7
 8001196:	f7ff f9a7 	bl	80004e8 <__aeabi_dmul>
 800119a:	4606      	mov	r6, r0
 800119c:	460f      	mov	r7, r1
 800119e:	b914      	cbnz	r4, 80011a6 <__ieee754_log+0x126>
 80011a0:	4632      	mov	r2, r6
 80011a2:	463b      	mov	r3, r7
 80011a4:	e0a0      	b.n	80012e8 <__ieee754_log+0x268>
 80011a6:	4620      	mov	r0, r4
 80011a8:	f7ff f934 	bl	8000414 <__aeabi_i2d>
 80011ac:	a374      	add	r3, pc, #464	@ (adr r3, 8001380 <__ieee754_log+0x300>)
 80011ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011b2:	4680      	mov	r8, r0
 80011b4:	4689      	mov	r9, r1
 80011b6:	f7ff f997 	bl	80004e8 <__aeabi_dmul>
 80011ba:	a373      	add	r3, pc, #460	@ (adr r3, 8001388 <__ieee754_log+0x308>)
 80011bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011c0:	4604      	mov	r4, r0
 80011c2:	460d      	mov	r5, r1
 80011c4:	4640      	mov	r0, r8
 80011c6:	4649      	mov	r1, r9
 80011c8:	f7ff f98e 	bl	80004e8 <__aeabi_dmul>
 80011cc:	e0a5      	b.n	800131a <__ieee754_log+0x29a>
 80011ce:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80011d2:	f7fe ffd3 	bl	800017c <__adddf3>
 80011d6:	4602      	mov	r2, r0
 80011d8:	460b      	mov	r3, r1
 80011da:	4650      	mov	r0, sl
 80011dc:	4659      	mov	r1, fp
 80011de:	f7ff faad 	bl	800073c <__aeabi_ddiv>
 80011e2:	e9cd 0100 	strd	r0, r1, [sp]
 80011e6:	4620      	mov	r0, r4
 80011e8:	f7ff f914 	bl	8000414 <__aeabi_i2d>
 80011ec:	e9dd 2300 	ldrd	r2, r3, [sp]
 80011f0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80011f4:	4610      	mov	r0, r2
 80011f6:	4619      	mov	r1, r3
 80011f8:	f7ff f976 	bl	80004e8 <__aeabi_dmul>
 80011fc:	4602      	mov	r2, r0
 80011fe:	460b      	mov	r3, r1
 8001200:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001204:	f7ff f970 	bl	80004e8 <__aeabi_dmul>
 8001208:	a363      	add	r3, pc, #396	@ (adr r3, 8001398 <__ieee754_log+0x318>)
 800120a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800120e:	4680      	mov	r8, r0
 8001210:	4689      	mov	r9, r1
 8001212:	f7ff f969 	bl	80004e8 <__aeabi_dmul>
 8001216:	a362      	add	r3, pc, #392	@ (adr r3, 80013a0 <__ieee754_log+0x320>)
 8001218:	e9d3 2300 	ldrd	r2, r3, [r3]
 800121c:	f7fe ffae 	bl	800017c <__adddf3>
 8001220:	4642      	mov	r2, r8
 8001222:	464b      	mov	r3, r9
 8001224:	f7ff f960 	bl	80004e8 <__aeabi_dmul>
 8001228:	a35f      	add	r3, pc, #380	@ (adr r3, 80013a8 <__ieee754_log+0x328>)
 800122a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800122e:	f7fe ffa5 	bl	800017c <__adddf3>
 8001232:	4642      	mov	r2, r8
 8001234:	464b      	mov	r3, r9
 8001236:	f7ff f957 	bl	80004e8 <__aeabi_dmul>
 800123a:	a35d      	add	r3, pc, #372	@ (adr r3, 80013b0 <__ieee754_log+0x330>)
 800123c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001240:	f7fe ff9c 	bl	800017c <__adddf3>
 8001244:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001248:	f7ff f94e 	bl	80004e8 <__aeabi_dmul>
 800124c:	a35a      	add	r3, pc, #360	@ (adr r3, 80013b8 <__ieee754_log+0x338>)
 800124e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001252:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8001256:	4640      	mov	r0, r8
 8001258:	4649      	mov	r1, r9
 800125a:	f7ff f945 	bl	80004e8 <__aeabi_dmul>
 800125e:	a358      	add	r3, pc, #352	@ (adr r3, 80013c0 <__ieee754_log+0x340>)
 8001260:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001264:	f7fe ff8a 	bl	800017c <__adddf3>
 8001268:	4642      	mov	r2, r8
 800126a:	464b      	mov	r3, r9
 800126c:	f7ff f93c 	bl	80004e8 <__aeabi_dmul>
 8001270:	a355      	add	r3, pc, #340	@ (adr r3, 80013c8 <__ieee754_log+0x348>)
 8001272:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001276:	f7fe ff81 	bl	800017c <__adddf3>
 800127a:	4642      	mov	r2, r8
 800127c:	464b      	mov	r3, r9
 800127e:	f7ff f933 	bl	80004e8 <__aeabi_dmul>
 8001282:	4602      	mov	r2, r0
 8001284:	460b      	mov	r3, r1
 8001286:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800128a:	f7fe ff77 	bl	800017c <__adddf3>
 800128e:	f5a5 26c2 	sub.w	r6, r5, #397312	@ 0x61000
 8001292:	f5c5 25d7 	rsb	r5, r5, #440320	@ 0x6b800
 8001296:	f2a6 467a 	subw	r6, r6, #1146	@ 0x47a
 800129a:	3551      	adds	r5, #81	@ 0x51
 800129c:	4335      	orrs	r5, r6
 800129e:	2d00      	cmp	r5, #0
 80012a0:	4680      	mov	r8, r0
 80012a2:	4689      	mov	r9, r1
 80012a4:	dd48      	ble.n	8001338 <__ieee754_log+0x2b8>
 80012a6:	2200      	movs	r2, #0
 80012a8:	4b4d      	ldr	r3, [pc, #308]	@ (80013e0 <__ieee754_log+0x360>)
 80012aa:	4650      	mov	r0, sl
 80012ac:	4659      	mov	r1, fp
 80012ae:	f7ff f91b 	bl	80004e8 <__aeabi_dmul>
 80012b2:	4652      	mov	r2, sl
 80012b4:	465b      	mov	r3, fp
 80012b6:	f7ff f917 	bl	80004e8 <__aeabi_dmul>
 80012ba:	4602      	mov	r2, r0
 80012bc:	460b      	mov	r3, r1
 80012be:	4606      	mov	r6, r0
 80012c0:	460f      	mov	r7, r1
 80012c2:	4640      	mov	r0, r8
 80012c4:	4649      	mov	r1, r9
 80012c6:	f7fe ff59 	bl	800017c <__adddf3>
 80012ca:	e9dd 2300 	ldrd	r2, r3, [sp]
 80012ce:	f7ff f90b 	bl	80004e8 <__aeabi_dmul>
 80012d2:	4680      	mov	r8, r0
 80012d4:	4689      	mov	r9, r1
 80012d6:	b964      	cbnz	r4, 80012f2 <__ieee754_log+0x272>
 80012d8:	4602      	mov	r2, r0
 80012da:	460b      	mov	r3, r1
 80012dc:	4630      	mov	r0, r6
 80012de:	4639      	mov	r1, r7
 80012e0:	f7fe ff4a 	bl	8000178 <__aeabi_dsub>
 80012e4:	4602      	mov	r2, r0
 80012e6:	460b      	mov	r3, r1
 80012e8:	4650      	mov	r0, sl
 80012ea:	4659      	mov	r1, fp
 80012ec:	f7fe ff44 	bl	8000178 <__aeabi_dsub>
 80012f0:	e6d9      	b.n	80010a6 <__ieee754_log+0x26>
 80012f2:	a323      	add	r3, pc, #140	@ (adr r3, 8001380 <__ieee754_log+0x300>)
 80012f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80012f8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80012fc:	f7ff f8f4 	bl	80004e8 <__aeabi_dmul>
 8001300:	a321      	add	r3, pc, #132	@ (adr r3, 8001388 <__ieee754_log+0x308>)
 8001302:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001306:	4604      	mov	r4, r0
 8001308:	460d      	mov	r5, r1
 800130a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800130e:	f7ff f8eb 	bl	80004e8 <__aeabi_dmul>
 8001312:	4642      	mov	r2, r8
 8001314:	464b      	mov	r3, r9
 8001316:	f7fe ff31 	bl	800017c <__adddf3>
 800131a:	4602      	mov	r2, r0
 800131c:	460b      	mov	r3, r1
 800131e:	4630      	mov	r0, r6
 8001320:	4639      	mov	r1, r7
 8001322:	f7fe ff29 	bl	8000178 <__aeabi_dsub>
 8001326:	4652      	mov	r2, sl
 8001328:	465b      	mov	r3, fp
 800132a:	f7fe ff25 	bl	8000178 <__aeabi_dsub>
 800132e:	4602      	mov	r2, r0
 8001330:	460b      	mov	r3, r1
 8001332:	4620      	mov	r0, r4
 8001334:	4629      	mov	r1, r5
 8001336:	e7d9      	b.n	80012ec <__ieee754_log+0x26c>
 8001338:	4602      	mov	r2, r0
 800133a:	460b      	mov	r3, r1
 800133c:	4650      	mov	r0, sl
 800133e:	4659      	mov	r1, fp
 8001340:	f7fe ff1a 	bl	8000178 <__aeabi_dsub>
 8001344:	e9dd 2300 	ldrd	r2, r3, [sp]
 8001348:	f7ff f8ce 	bl	80004e8 <__aeabi_dmul>
 800134c:	4606      	mov	r6, r0
 800134e:	460f      	mov	r7, r1
 8001350:	2c00      	cmp	r4, #0
 8001352:	f43f af25 	beq.w	80011a0 <__ieee754_log+0x120>
 8001356:	a30a      	add	r3, pc, #40	@ (adr r3, 8001380 <__ieee754_log+0x300>)
 8001358:	e9d3 2300 	ldrd	r2, r3, [r3]
 800135c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8001360:	f7ff f8c2 	bl	80004e8 <__aeabi_dmul>
 8001364:	a308      	add	r3, pc, #32	@ (adr r3, 8001388 <__ieee754_log+0x308>)
 8001366:	e9d3 2300 	ldrd	r2, r3, [r3]
 800136a:	4604      	mov	r4, r0
 800136c:	460d      	mov	r5, r1
 800136e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8001372:	e729      	b.n	80011c8 <__ieee754_log+0x148>
 8001374:	2000      	movs	r0, #0
 8001376:	2100      	movs	r1, #0
 8001378:	e695      	b.n	80010a6 <__ieee754_log+0x26>
 800137a:	bf00      	nop
 800137c:	f3af 8000 	nop.w
 8001380:	fee00000 	.word	0xfee00000
 8001384:	3fe62e42 	.word	0x3fe62e42
 8001388:	35793c76 	.word	0x35793c76
 800138c:	3dea39ef 	.word	0x3dea39ef
 8001390:	55555555 	.word	0x55555555
 8001394:	3fd55555 	.word	0x3fd55555
 8001398:	df3e5244 	.word	0xdf3e5244
 800139c:	3fc2f112 	.word	0x3fc2f112
 80013a0:	96cb03de 	.word	0x96cb03de
 80013a4:	3fc74664 	.word	0x3fc74664
 80013a8:	94229359 	.word	0x94229359
 80013ac:	3fd24924 	.word	0x3fd24924
 80013b0:	55555593 	.word	0x55555593
 80013b4:	3fe55555 	.word	0x3fe55555
 80013b8:	d078c69f 	.word	0xd078c69f
 80013bc:	3fc39a09 	.word	0x3fc39a09
 80013c0:	1d8e78af 	.word	0x1d8e78af
 80013c4:	3fcc71c5 	.word	0x3fcc71c5
 80013c8:	9997fa04 	.word	0x9997fa04
 80013cc:	3fd99999 	.word	0x3fd99999
 80013d0:	c3500000 	.word	0xc3500000
 80013d4:	43500000 	.word	0x43500000
 80013d8:	7fefffff 	.word	0x7fefffff
 80013dc:	3ff00000 	.word	0x3ff00000
 80013e0:	3fe00000 	.word	0x3fe00000

080013e4 <_init>:
 80013e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013e6:	bf00      	nop
 80013e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013ea:	bc08      	pop	{r3}
 80013ec:	469e      	mov	lr, r3
 80013ee:	4770      	bx	lr

080013f0 <_fini>:
 80013f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013f2:	bf00      	nop
 80013f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013f6:	bc08      	pop	{r3}
 80013f8:	469e      	mov	lr, r3
 80013fa:	4770      	bx	lr
